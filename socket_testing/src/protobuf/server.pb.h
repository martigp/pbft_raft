// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server.proto
// Protobuf C++ Version: 4.26.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED_server_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_server_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION != 4026000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_server_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_server_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_server_2eproto;
namespace Raft {
class AppendEntries;
struct AppendEntriesDefaultTypeInternal;
extern AppendEntriesDefaultTypeInternal _AppendEntries_default_instance_;
class AppendEntries_Request;
struct AppendEntries_RequestDefaultTypeInternal;
extern AppendEntries_RequestDefaultTypeInternal _AppendEntries_Request_default_instance_;
class AppendEntries_Response;
struct AppendEntries_ResponseDefaultTypeInternal;
extern AppendEntries_ResponseDefaultTypeInternal _AppendEntries_Response_default_instance_;
class Entry;
struct EntryDefaultTypeInternal;
extern EntryDefaultTypeInternal _Entry_default_instance_;
class RequestVote;
struct RequestVoteDefaultTypeInternal;
extern RequestVoteDefaultTypeInternal _RequestVote_default_instance_;
class RequestVote_Request;
struct RequestVote_RequestDefaultTypeInternal;
extern RequestVote_RequestDefaultTypeInternal _RequestVote_Request_default_instance_;
class RequestVote_Response;
struct RequestVote_ResponseDefaultTypeInternal;
extern RequestVote_ResponseDefaultTypeInternal _RequestVote_Response_default_instance_;
}  // namespace Raft
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace Raft {

// ===================================================================


// -------------------------------------------------------------------

class RequestVote_Response final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Raft.RequestVote.Response) */ {
 public:
  inline RequestVote_Response() : RequestVote_Response(nullptr) {}
  ~RequestVote_Response() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RequestVote_Response(
      ::google::protobuf::internal::ConstantInitialized);

  inline RequestVote_Response(const RequestVote_Response& from) : RequestVote_Response(nullptr, from) {}
  inline RequestVote_Response(RequestVote_Response&& from) noexcept
      : RequestVote_Response(nullptr, std::move(from)) {}
  inline RequestVote_Response& operator=(const RequestVote_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestVote_Response& operator=(RequestVote_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequestVote_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const RequestVote_Response* internal_default_instance() {
    return reinterpret_cast<const RequestVote_Response*>(
        &_RequestVote_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(RequestVote_Response& a, RequestVote_Response& b) { a.Swap(&b); }
  inline void Swap(RequestVote_Response* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequestVote_Response* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RequestVote_Response* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RequestVote_Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RequestVote_Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RequestVote_Response& from) { RequestVote_Response::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RequestVote_Response* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "Raft.RequestVote.Response"; }

 protected:
  explicit RequestVote_Response(::google::protobuf::Arena* arena);
  RequestVote_Response(::google::protobuf::Arena* arena, const RequestVote_Response& from);
  RequestVote_Response(::google::protobuf::Arena* arena, RequestVote_Response&& from) noexcept
      : RequestVote_Response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTermFieldNumber = 1,
    kVoteGrantedFieldNumber = 2,
  };
  // uint64 term = 1;
  void clear_term() ;
  ::uint64_t term() const;
  void set_term(::uint64_t value);

  private:
  ::uint64_t _internal_term() const;
  void _internal_set_term(::uint64_t value);

  public:
  // bool voteGranted = 2;
  void clear_votegranted() ;
  bool votegranted() const;
  void set_votegranted(bool value);

  private:
  bool _internal_votegranted() const;
  void _internal_set_votegranted(bool value);

  public:
  // @@protoc_insertion_point(class_scope:Raft.RequestVote.Response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t term_;
    bool votegranted_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class RequestVote_Request final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Raft.RequestVote.Request) */ {
 public:
  inline RequestVote_Request() : RequestVote_Request(nullptr) {}
  ~RequestVote_Request() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RequestVote_Request(
      ::google::protobuf::internal::ConstantInitialized);

  inline RequestVote_Request(const RequestVote_Request& from) : RequestVote_Request(nullptr, from) {}
  inline RequestVote_Request(RequestVote_Request&& from) noexcept
      : RequestVote_Request(nullptr, std::move(from)) {}
  inline RequestVote_Request& operator=(const RequestVote_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestVote_Request& operator=(RequestVote_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequestVote_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const RequestVote_Request* internal_default_instance() {
    return reinterpret_cast<const RequestVote_Request*>(
        &_RequestVote_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(RequestVote_Request& a, RequestVote_Request& b) { a.Swap(&b); }
  inline void Swap(RequestVote_Request* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequestVote_Request* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RequestVote_Request* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RequestVote_Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RequestVote_Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RequestVote_Request& from) { RequestVote_Request::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RequestVote_Request* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "Raft.RequestVote.Request"; }

 protected:
  explicit RequestVote_Request(::google::protobuf::Arena* arena);
  RequestVote_Request(::google::protobuf::Arena* arena, const RequestVote_Request& from);
  RequestVote_Request(::google::protobuf::Arena* arena, RequestVote_Request&& from) noexcept
      : RequestVote_Request(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTermFieldNumber = 1,
    kCandidateIdFieldNumber = 2,
    kLastLogIndexFieldNumber = 3,
    kLastLogTermFieldNumber = 4,
  };
  // uint64 term = 1;
  void clear_term() ;
  ::uint64_t term() const;
  void set_term(::uint64_t value);

  private:
  ::uint64_t _internal_term() const;
  void _internal_set_term(::uint64_t value);

  public:
  // uint64 candidateId = 2;
  void clear_candidateid() ;
  ::uint64_t candidateid() const;
  void set_candidateid(::uint64_t value);

  private:
  ::uint64_t _internal_candidateid() const;
  void _internal_set_candidateid(::uint64_t value);

  public:
  // uint64 lastLogIndex = 3;
  void clear_lastlogindex() ;
  ::uint64_t lastlogindex() const;
  void set_lastlogindex(::uint64_t value);

  private:
  ::uint64_t _internal_lastlogindex() const;
  void _internal_set_lastlogindex(::uint64_t value);

  public:
  // uint64 lastLogTerm = 4;
  void clear_lastlogterm() ;
  ::uint64_t lastlogterm() const;
  void set_lastlogterm(::uint64_t value);

  private:
  ::uint64_t _internal_lastlogterm() const;
  void _internal_set_lastlogterm(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:Raft.RequestVote.Request)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t term_;
    ::uint64_t candidateid_;
    ::uint64_t lastlogindex_;
    ::uint64_t lastlogterm_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class RequestVote final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:Raft.RequestVote) */ {
 public:
  inline RequestVote() : RequestVote(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RequestVote(
      ::google::protobuf::internal::ConstantInitialized);

  inline RequestVote(const RequestVote& from) : RequestVote(nullptr, from) {}
  inline RequestVote(RequestVote&& from) noexcept
      : RequestVote(nullptr, std::move(from)) {}
  inline RequestVote& operator=(const RequestVote& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestVote& operator=(RequestVote&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequestVote& default_instance() {
    return *internal_default_instance();
  }
  static inline const RequestVote* internal_default_instance() {
    return reinterpret_cast<const RequestVote*>(
        &_RequestVote_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(RequestVote& a, RequestVote& b) { a.Swap(&b); }
  inline void Swap(RequestVote* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequestVote* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RequestVote* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<RequestVote>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const RequestVote& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const RequestVote& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "Raft.RequestVote"; }

 protected:
  explicit RequestVote(::google::protobuf::Arena* arena);
  RequestVote(::google::protobuf::Arena* arena, const RequestVote& from);
  RequestVote(::google::protobuf::Arena* arena, RequestVote&& from) noexcept
      : RequestVote(arena) {
    *this = ::std::move(from);
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------
  using Request = RequestVote_Request;
  using Response = RequestVote_Response;

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:Raft.RequestVote)
 private:
  class _Internal;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class Entry final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Raft.Entry) */ {
 public:
  inline Entry() : Entry(nullptr) {}
  ~Entry() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Entry(
      ::google::protobuf::internal::ConstantInitialized);

  inline Entry(const Entry& from) : Entry(nullptr, from) {}
  inline Entry(Entry&& from) noexcept
      : Entry(nullptr, std::move(from)) {}
  inline Entry& operator=(const Entry& from) {
    CopyFrom(from);
    return *this;
  }
  inline Entry& operator=(Entry&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Entry& default_instance() {
    return *internal_default_instance();
  }
  static inline const Entry* internal_default_instance() {
    return reinterpret_cast<const Entry*>(
        &_Entry_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Entry& a, Entry& b) { a.Swap(&b); }
  inline void Swap(Entry* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Entry* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Entry* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Entry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Entry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Entry& from) { Entry::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Entry* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "Raft.Entry"; }

 protected:
  explicit Entry(::google::protobuf::Arena* arena);
  Entry(::google::protobuf::Arena* arena, const Entry& from);
  Entry(::google::protobuf::Arena* arena, Entry&& from) noexcept
      : Entry(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCmdFieldNumber = 1,
  };
  // bytes cmd = 1;
  void clear_cmd() ;
  const std::string& cmd() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cmd(Arg_&& arg, Args_... args);
  std::string* mutable_cmd();
  PROTOBUF_NODISCARD std::string* release_cmd();
  void set_allocated_cmd(std::string* value);

  private:
  const std::string& _internal_cmd() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cmd(
      const std::string& value);
  std::string* _internal_mutable_cmd();

  public:
  // @@protoc_insertion_point(class_scope:Raft.Entry)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr cmd_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class AppendEntries_Response final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Raft.AppendEntries.Response) */ {
 public:
  inline AppendEntries_Response() : AppendEntries_Response(nullptr) {}
  ~AppendEntries_Response() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AppendEntries_Response(
      ::google::protobuf::internal::ConstantInitialized);

  inline AppendEntries_Response(const AppendEntries_Response& from) : AppendEntries_Response(nullptr, from) {}
  inline AppendEntries_Response(AppendEntries_Response&& from) noexcept
      : AppendEntries_Response(nullptr, std::move(from)) {}
  inline AppendEntries_Response& operator=(const AppendEntries_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline AppendEntries_Response& operator=(AppendEntries_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AppendEntries_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const AppendEntries_Response* internal_default_instance() {
    return reinterpret_cast<const AppendEntries_Response*>(
        &_AppendEntries_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(AppendEntries_Response& a, AppendEntries_Response& b) { a.Swap(&b); }
  inline void Swap(AppendEntries_Response* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AppendEntries_Response* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AppendEntries_Response* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AppendEntries_Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AppendEntries_Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AppendEntries_Response& from) { AppendEntries_Response::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AppendEntries_Response* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "Raft.AppendEntries.Response"; }

 protected:
  explicit AppendEntries_Response(::google::protobuf::Arena* arena);
  AppendEntries_Response(::google::protobuf::Arena* arena, const AppendEntries_Response& from);
  AppendEntries_Response(::google::protobuf::Arena* arena, AppendEntries_Response&& from) noexcept
      : AppendEntries_Response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTermFieldNumber = 1,
    kSuccessFieldNumber = 2,
  };
  // uint64 term = 1;
  void clear_term() ;
  ::uint64_t term() const;
  void set_term(::uint64_t value);

  private:
  ::uint64_t _internal_term() const;
  void _internal_set_term(::uint64_t value);

  public:
  // bool success = 2;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:Raft.AppendEntries.Response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t term_;
    bool success_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class AppendEntries final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:Raft.AppendEntries) */ {
 public:
  inline AppendEntries() : AppendEntries(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AppendEntries(
      ::google::protobuf::internal::ConstantInitialized);

  inline AppendEntries(const AppendEntries& from) : AppendEntries(nullptr, from) {}
  inline AppendEntries(AppendEntries&& from) noexcept
      : AppendEntries(nullptr, std::move(from)) {}
  inline AppendEntries& operator=(const AppendEntries& from) {
    CopyFrom(from);
    return *this;
  }
  inline AppendEntries& operator=(AppendEntries&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AppendEntries& default_instance() {
    return *internal_default_instance();
  }
  static inline const AppendEntries* internal_default_instance() {
    return reinterpret_cast<const AppendEntries*>(
        &_AppendEntries_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(AppendEntries& a, AppendEntries& b) { a.Swap(&b); }
  inline void Swap(AppendEntries* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AppendEntries* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AppendEntries* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<AppendEntries>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const AppendEntries& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const AppendEntries& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "Raft.AppendEntries"; }

 protected:
  explicit AppendEntries(::google::protobuf::Arena* arena);
  AppendEntries(::google::protobuf::Arena* arena, const AppendEntries& from);
  AppendEntries(::google::protobuf::Arena* arena, AppendEntries&& from) noexcept
      : AppendEntries(arena) {
    *this = ::std::move(from);
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------
  using Request = AppendEntries_Request;
  using Response = AppendEntries_Response;

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:Raft.AppendEntries)
 private:
  class _Internal;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class AppendEntries_Request final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Raft.AppendEntries.Request) */ {
 public:
  inline AppendEntries_Request() : AppendEntries_Request(nullptr) {}
  ~AppendEntries_Request() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AppendEntries_Request(
      ::google::protobuf::internal::ConstantInitialized);

  inline AppendEntries_Request(const AppendEntries_Request& from) : AppendEntries_Request(nullptr, from) {}
  inline AppendEntries_Request(AppendEntries_Request&& from) noexcept
      : AppendEntries_Request(nullptr, std::move(from)) {}
  inline AppendEntries_Request& operator=(const AppendEntries_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline AppendEntries_Request& operator=(AppendEntries_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AppendEntries_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const AppendEntries_Request* internal_default_instance() {
    return reinterpret_cast<const AppendEntries_Request*>(
        &_AppendEntries_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(AppendEntries_Request& a, AppendEntries_Request& b) { a.Swap(&b); }
  inline void Swap(AppendEntries_Request* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AppendEntries_Request* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AppendEntries_Request* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AppendEntries_Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AppendEntries_Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AppendEntries_Request& from) { AppendEntries_Request::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AppendEntries_Request* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "Raft.AppendEntries.Request"; }

 protected:
  explicit AppendEntries_Request(::google::protobuf::Arena* arena);
  AppendEntries_Request(::google::protobuf::Arena* arena, const AppendEntries_Request& from);
  AppendEntries_Request(::google::protobuf::Arena* arena, AppendEntries_Request&& from) noexcept
      : AppendEntries_Request(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntriesFieldNumber = 5,
    kTermFieldNumber = 1,
    kLeaderIdFieldNumber = 2,
    kPrevLogIndexFieldNumber = 3,
    kPrevLogTermFieldNumber = 4,
    kLeaderCommitFieldNumber = 6,
  };
  // repeated .Raft.Entry entries = 5;
  int entries_size() const;
  private:
  int _internal_entries_size() const;

  public:
  void clear_entries() ;
  ::Raft::Entry* mutable_entries(int index);
  ::google::protobuf::RepeatedPtrField<::Raft::Entry>* mutable_entries();

  private:
  const ::google::protobuf::RepeatedPtrField<::Raft::Entry>& _internal_entries() const;
  ::google::protobuf::RepeatedPtrField<::Raft::Entry>* _internal_mutable_entries();
  public:
  const ::Raft::Entry& entries(int index) const;
  ::Raft::Entry* add_entries();
  const ::google::protobuf::RepeatedPtrField<::Raft::Entry>& entries() const;
  // uint64 term = 1;
  void clear_term() ;
  ::uint64_t term() const;
  void set_term(::uint64_t value);

  private:
  ::uint64_t _internal_term() const;
  void _internal_set_term(::uint64_t value);

  public:
  // uint64 leaderId = 2;
  void clear_leaderid() ;
  ::uint64_t leaderid() const;
  void set_leaderid(::uint64_t value);

  private:
  ::uint64_t _internal_leaderid() const;
  void _internal_set_leaderid(::uint64_t value);

  public:
  // uint64 prevLogIndex = 3;
  void clear_prevlogindex() ;
  ::uint64_t prevlogindex() const;
  void set_prevlogindex(::uint64_t value);

  private:
  ::uint64_t _internal_prevlogindex() const;
  void _internal_set_prevlogindex(::uint64_t value);

  public:
  // uint64 prevLogTerm = 4;
  void clear_prevlogterm() ;
  ::uint64_t prevlogterm() const;
  void set_prevlogterm(::uint64_t value);

  private:
  ::uint64_t _internal_prevlogterm() const;
  void _internal_set_prevlogterm(::uint64_t value);

  public:
  // uint64 leaderCommit = 6;
  void clear_leadercommit() ;
  ::uint64_t leadercommit() const;
  void set_leadercommit(::uint64_t value);

  private:
  ::uint64_t _internal_leadercommit() const;
  void _internal_set_leadercommit(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:Raft.AppendEntries.Request)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::Raft::Entry > entries_;
    ::uint64_t term_;
    ::uint64_t leaderid_;
    ::uint64_t prevlogindex_;
    ::uint64_t prevlogterm_;
    ::uint64_t leadercommit_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_server_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Entry

// bytes cmd = 1;
inline void Entry::clear_cmd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cmd_.ClearToEmpty();
}
inline const std::string& Entry::cmd() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Raft.Entry.cmd)
  return _internal_cmd();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Entry::set_cmd(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cmd_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Raft.Entry.cmd)
}
inline std::string* Entry::mutable_cmd() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_cmd();
  // @@protoc_insertion_point(field_mutable:Raft.Entry.cmd)
  return _s;
}
inline const std::string& Entry::_internal_cmd() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cmd_.Get();
}
inline void Entry::_internal_set_cmd(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cmd_.Set(value, GetArena());
}
inline std::string* Entry::_internal_mutable_cmd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.cmd_.Mutable( GetArena());
}
inline std::string* Entry::release_cmd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Raft.Entry.cmd)
  return _impl_.cmd_.Release();
}
inline void Entry::set_allocated_cmd(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cmd_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.cmd_.IsDefault()) {
          _impl_.cmd_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Raft.Entry.cmd)
}

// -------------------------------------------------------------------

// AppendEntries_Request

// uint64 term = 1;
inline void AppendEntries_Request::clear_term() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = ::uint64_t{0u};
}
inline ::uint64_t AppendEntries_Request::term() const {
  // @@protoc_insertion_point(field_get:Raft.AppendEntries.Request.term)
  return _internal_term();
}
inline void AppendEntries_Request::set_term(::uint64_t value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:Raft.AppendEntries.Request.term)
}
inline ::uint64_t AppendEntries_Request::_internal_term() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.term_;
}
inline void AppendEntries_Request::_internal_set_term(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = value;
}

// uint64 leaderId = 2;
inline void AppendEntries_Request::clear_leaderid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.leaderid_ = ::uint64_t{0u};
}
inline ::uint64_t AppendEntries_Request::leaderid() const {
  // @@protoc_insertion_point(field_get:Raft.AppendEntries.Request.leaderId)
  return _internal_leaderid();
}
inline void AppendEntries_Request::set_leaderid(::uint64_t value) {
  _internal_set_leaderid(value);
  // @@protoc_insertion_point(field_set:Raft.AppendEntries.Request.leaderId)
}
inline ::uint64_t AppendEntries_Request::_internal_leaderid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.leaderid_;
}
inline void AppendEntries_Request::_internal_set_leaderid(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.leaderid_ = value;
}

// uint64 prevLogIndex = 3;
inline void AppendEntries_Request::clear_prevlogindex() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.prevlogindex_ = ::uint64_t{0u};
}
inline ::uint64_t AppendEntries_Request::prevlogindex() const {
  // @@protoc_insertion_point(field_get:Raft.AppendEntries.Request.prevLogIndex)
  return _internal_prevlogindex();
}
inline void AppendEntries_Request::set_prevlogindex(::uint64_t value) {
  _internal_set_prevlogindex(value);
  // @@protoc_insertion_point(field_set:Raft.AppendEntries.Request.prevLogIndex)
}
inline ::uint64_t AppendEntries_Request::_internal_prevlogindex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.prevlogindex_;
}
inline void AppendEntries_Request::_internal_set_prevlogindex(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.prevlogindex_ = value;
}

// uint64 prevLogTerm = 4;
inline void AppendEntries_Request::clear_prevlogterm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.prevlogterm_ = ::uint64_t{0u};
}
inline ::uint64_t AppendEntries_Request::prevlogterm() const {
  // @@protoc_insertion_point(field_get:Raft.AppendEntries.Request.prevLogTerm)
  return _internal_prevlogterm();
}
inline void AppendEntries_Request::set_prevlogterm(::uint64_t value) {
  _internal_set_prevlogterm(value);
  // @@protoc_insertion_point(field_set:Raft.AppendEntries.Request.prevLogTerm)
}
inline ::uint64_t AppendEntries_Request::_internal_prevlogterm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.prevlogterm_;
}
inline void AppendEntries_Request::_internal_set_prevlogterm(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.prevlogterm_ = value;
}

// repeated .Raft.Entry entries = 5;
inline int AppendEntries_Request::_internal_entries_size() const {
  return _internal_entries().size();
}
inline int AppendEntries_Request::entries_size() const {
  return _internal_entries_size();
}
inline void AppendEntries_Request::clear_entries() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.entries_.Clear();
}
inline ::Raft::Entry* AppendEntries_Request::mutable_entries(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Raft.AppendEntries.Request.entries)
  return _internal_mutable_entries()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Raft::Entry>* AppendEntries_Request::mutable_entries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Raft.AppendEntries.Request.entries)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_entries();
}
inline const ::Raft::Entry& AppendEntries_Request::entries(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Raft.AppendEntries.Request.entries)
  return _internal_entries().Get(index);
}
inline ::Raft::Entry* AppendEntries_Request::add_entries() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Raft::Entry* _add = _internal_mutable_entries()->Add();
  // @@protoc_insertion_point(field_add:Raft.AppendEntries.Request.entries)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Raft::Entry>& AppendEntries_Request::entries() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Raft.AppendEntries.Request.entries)
  return _internal_entries();
}
inline const ::google::protobuf::RepeatedPtrField<::Raft::Entry>&
AppendEntries_Request::_internal_entries() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.entries_;
}
inline ::google::protobuf::RepeatedPtrField<::Raft::Entry>*
AppendEntries_Request::_internal_mutable_entries() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.entries_;
}

// uint64 leaderCommit = 6;
inline void AppendEntries_Request::clear_leadercommit() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.leadercommit_ = ::uint64_t{0u};
}
inline ::uint64_t AppendEntries_Request::leadercommit() const {
  // @@protoc_insertion_point(field_get:Raft.AppendEntries.Request.leaderCommit)
  return _internal_leadercommit();
}
inline void AppendEntries_Request::set_leadercommit(::uint64_t value) {
  _internal_set_leadercommit(value);
  // @@protoc_insertion_point(field_set:Raft.AppendEntries.Request.leaderCommit)
}
inline ::uint64_t AppendEntries_Request::_internal_leadercommit() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.leadercommit_;
}
inline void AppendEntries_Request::_internal_set_leadercommit(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.leadercommit_ = value;
}

// -------------------------------------------------------------------

// AppendEntries_Response

// uint64 term = 1;
inline void AppendEntries_Response::clear_term() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = ::uint64_t{0u};
}
inline ::uint64_t AppendEntries_Response::term() const {
  // @@protoc_insertion_point(field_get:Raft.AppendEntries.Response.term)
  return _internal_term();
}
inline void AppendEntries_Response::set_term(::uint64_t value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:Raft.AppendEntries.Response.term)
}
inline ::uint64_t AppendEntries_Response::_internal_term() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.term_;
}
inline void AppendEntries_Response::_internal_set_term(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = value;
}

// bool success = 2;
inline void AppendEntries_Response::clear_success() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.success_ = false;
}
inline bool AppendEntries_Response::success() const {
  // @@protoc_insertion_point(field_get:Raft.AppendEntries.Response.success)
  return _internal_success();
}
inline void AppendEntries_Response::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:Raft.AppendEntries.Response.success)
}
inline bool AppendEntries_Response::_internal_success() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.success_;
}
inline void AppendEntries_Response::_internal_set_success(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.success_ = value;
}

// -------------------------------------------------------------------

// AppendEntries

// -------------------------------------------------------------------

// RequestVote_Request

// uint64 term = 1;
inline void RequestVote_Request::clear_term() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = ::uint64_t{0u};
}
inline ::uint64_t RequestVote_Request::term() const {
  // @@protoc_insertion_point(field_get:Raft.RequestVote.Request.term)
  return _internal_term();
}
inline void RequestVote_Request::set_term(::uint64_t value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:Raft.RequestVote.Request.term)
}
inline ::uint64_t RequestVote_Request::_internal_term() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.term_;
}
inline void RequestVote_Request::_internal_set_term(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = value;
}

// uint64 candidateId = 2;
inline void RequestVote_Request::clear_candidateid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.candidateid_ = ::uint64_t{0u};
}
inline ::uint64_t RequestVote_Request::candidateid() const {
  // @@protoc_insertion_point(field_get:Raft.RequestVote.Request.candidateId)
  return _internal_candidateid();
}
inline void RequestVote_Request::set_candidateid(::uint64_t value) {
  _internal_set_candidateid(value);
  // @@protoc_insertion_point(field_set:Raft.RequestVote.Request.candidateId)
}
inline ::uint64_t RequestVote_Request::_internal_candidateid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.candidateid_;
}
inline void RequestVote_Request::_internal_set_candidateid(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.candidateid_ = value;
}

// uint64 lastLogIndex = 3;
inline void RequestVote_Request::clear_lastlogindex() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lastlogindex_ = ::uint64_t{0u};
}
inline ::uint64_t RequestVote_Request::lastlogindex() const {
  // @@protoc_insertion_point(field_get:Raft.RequestVote.Request.lastLogIndex)
  return _internal_lastlogindex();
}
inline void RequestVote_Request::set_lastlogindex(::uint64_t value) {
  _internal_set_lastlogindex(value);
  // @@protoc_insertion_point(field_set:Raft.RequestVote.Request.lastLogIndex)
}
inline ::uint64_t RequestVote_Request::_internal_lastlogindex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lastlogindex_;
}
inline void RequestVote_Request::_internal_set_lastlogindex(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lastlogindex_ = value;
}

// uint64 lastLogTerm = 4;
inline void RequestVote_Request::clear_lastlogterm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lastlogterm_ = ::uint64_t{0u};
}
inline ::uint64_t RequestVote_Request::lastlogterm() const {
  // @@protoc_insertion_point(field_get:Raft.RequestVote.Request.lastLogTerm)
  return _internal_lastlogterm();
}
inline void RequestVote_Request::set_lastlogterm(::uint64_t value) {
  _internal_set_lastlogterm(value);
  // @@protoc_insertion_point(field_set:Raft.RequestVote.Request.lastLogTerm)
}
inline ::uint64_t RequestVote_Request::_internal_lastlogterm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lastlogterm_;
}
inline void RequestVote_Request::_internal_set_lastlogterm(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lastlogterm_ = value;
}

// -------------------------------------------------------------------

// RequestVote_Response

// uint64 term = 1;
inline void RequestVote_Response::clear_term() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = ::uint64_t{0u};
}
inline ::uint64_t RequestVote_Response::term() const {
  // @@protoc_insertion_point(field_get:Raft.RequestVote.Response.term)
  return _internal_term();
}
inline void RequestVote_Response::set_term(::uint64_t value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:Raft.RequestVote.Response.term)
}
inline ::uint64_t RequestVote_Response::_internal_term() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.term_;
}
inline void RequestVote_Response::_internal_set_term(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = value;
}

// bool voteGranted = 2;
inline void RequestVote_Response::clear_votegranted() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.votegranted_ = false;
}
inline bool RequestVote_Response::votegranted() const {
  // @@protoc_insertion_point(field_get:Raft.RequestVote.Response.voteGranted)
  return _internal_votegranted();
}
inline void RequestVote_Response::set_votegranted(bool value) {
  _internal_set_votegranted(value);
  // @@protoc_insertion_point(field_set:Raft.RequestVote.Response.voteGranted)
}
inline bool RequestVote_Response::_internal_votegranted() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.votegranted_;
}
inline void RequestVote_Response::_internal_set_votegranted(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.votegranted_ = value;
}

// -------------------------------------------------------------------

// RequestVote

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace Raft


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_server_2eproto_2epb_2eh
