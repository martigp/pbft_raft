// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: HotStuffRPC.proto
// Protobuf C++ Version: 5.28.0-dev

#include "HotStuffRPC.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace HotStuff {

inline constexpr Node::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        parent_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cmd_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        justify_{nullptr},
        height_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR Node::Node(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NodeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeDefaultTypeInternal() {}
  union {
    Node _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeDefaultTypeInternal _Node_default_instance_;

inline constexpr QC::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sig_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        node_{nullptr},
        viewnumber_{::uint64_t{0u}},
        type_{static_cast< ::HotStuff::Type >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR QC::QC(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct QCDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QCDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QCDefaultTypeInternal() {}
  union {
    QC _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QCDefaultTypeInternal _QC_default_instance_;

inline constexpr msg_Data::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        node_{nullptr},
        viewnumber_{::uint64_t{0u}},
        type_{static_cast< ::HotStuff::Type >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR msg_Data::msg_Data(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct msg_DataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR msg_DataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~msg_DataDefaultTypeInternal() {}
  union {
    msg_Data _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 msg_DataDefaultTypeInternal _msg_Data_default_instance_;

inline constexpr msg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        senderid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        partialsig_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_{nullptr},
        justify_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR msg::msg(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct msgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR msgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~msgDefaultTypeInternal() {}
  union {
    msg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 msgDefaultTypeInternal _msg_default_instance_;
}  // namespace HotStuff
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_HotStuffRPC_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_HotStuffRPC_2eproto = nullptr;
const ::uint32_t
    TableStruct_HotStuffRPC_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::HotStuff::Node, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::HotStuff::Node, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::HotStuff::Node, _impl_.parent_),
        PROTOBUF_FIELD_OFFSET(::HotStuff::Node, _impl_.cmd_),
        PROTOBUF_FIELD_OFFSET(::HotStuff::Node, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::HotStuff::Node, _impl_.justify_),
        ~0u,
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::HotStuff::QC, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::HotStuff::QC, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::HotStuff::QC, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::HotStuff::QC, _impl_.viewnumber_),
        PROTOBUF_FIELD_OFFSET(::HotStuff::QC, _impl_.node_),
        PROTOBUF_FIELD_OFFSET(::HotStuff::QC, _impl_.sig_),
        ~0u,
        ~0u,
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::HotStuff::msg_Data, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::HotStuff::msg_Data, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::HotStuff::msg_Data, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::HotStuff::msg_Data, _impl_.viewnumber_),
        PROTOBUF_FIELD_OFFSET(::HotStuff::msg_Data, _impl_.node_),
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::HotStuff::msg, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::HotStuff::msg, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::HotStuff::msg, _impl_.senderid_),
        PROTOBUF_FIELD_OFFSET(::HotStuff::msg, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::HotStuff::msg, _impl_.justify_),
        PROTOBUF_FIELD_OFFSET(::HotStuff::msg, _impl_.partialsig_),
        ~0u,
        1,
        2,
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 12, -1, sizeof(::HotStuff::Node)},
        {16, 28, -1, sizeof(::HotStuff::QC)},
        {32, 43, -1, sizeof(::HotStuff::msg_Data)},
        {46, 58, -1, sizeof(::HotStuff::msg)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::HotStuff::_Node_default_instance_._instance,
    &::HotStuff::_QC_default_instance_._instance,
    &::HotStuff::_msg_Data_default_instance_._instance,
    &::HotStuff::_msg_default_instance_._instance,
};
const char descriptor_table_protodef_HotStuffRPC_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\021HotStuffRPC.proto\022\010HotStuff\"R\n\004Node\022\016\n"
    "\006parent\030\001 \001(\014\022\013\n\003cmd\030\002 \001(\014\022\016\n\006height\030\003 \001"
    "(\004\022\035\n\007justify\030\004 \001(\0132\014.HotStuff.QC\"a\n\002QC\022"
    "\034\n\004type\030\001 \001(\0162\016.HotStuff.Type\022\022\n\nviewNum"
    "ber\030\002 \001(\004\022\034\n\004node\030\003 \001(\0132\016.HotStuff.Node\022"
    "\013\n\003sig\030\004 \001(\014\"\367\001\n\003msg\022\020\n\010senderId\030\001 \001(\014\022 "
    "\n\004data\030\002 \001(\0132\022.HotStuff.msg.Data\022\"\n\007just"
    "ify\030\003 \001(\0132\014.HotStuff.QCH\000\210\001\001\022\027\n\npartialS"
    "ig\030\004 \001(\014H\001\210\001\001\032d\n\004Data\022\034\n\004type\030\001 \001(\0162\016.Ho"
    "tStuff.Type\022\022\n\nviewNumber\030\002 \001(\004\022!\n\004node\030"
    "\003 \001(\0132\016.HotStuff.NodeH\000\210\001\001B\007\n\005_nodeB\n\n\010_"
    "justifyB\r\n\013_partialSig*,\n\004Type\022\014\n\010NEW_VI"
    "EW\020\000\022\014\n\010PROPOSAL\020\001\022\010\n\004VOTE\020\002b\006proto3"
};
static ::absl::once_flag descriptor_table_HotStuffRPC_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_HotStuffRPC_2eproto = {
    false,
    false,
    516,
    descriptor_table_protodef_HotStuffRPC_2eproto,
    "HotStuffRPC.proto",
    &descriptor_table_HotStuffRPC_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_HotStuffRPC_2eproto::offsets,
    file_level_enum_descriptors_HotStuffRPC_2eproto,
    file_level_service_descriptors_HotStuffRPC_2eproto,
};
namespace HotStuff {
const ::google::protobuf::EnumDescriptor* Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_HotStuffRPC_2eproto);
  return file_level_enum_descriptors_HotStuffRPC_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Type_internal_data_[] = {
    196608u, 0u, };
bool Type_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class Node::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Node>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Node, _impl_._has_bits_);
};

Node::Node(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HotStuff.Node)
}
inline PROTOBUF_NDEBUG_INLINE Node::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::HotStuff::Node& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        parent_(arena, from.parent_),
        cmd_(arena, from.cmd_) {}

Node::Node(
    ::google::protobuf::Arena* arena,
    const Node& from)
    : ::google::protobuf::Message(arena) {
  Node* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.justify_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::HotStuff::QC>(
                              arena, *from._impl_.justify_)
                        : nullptr;
  _impl_.height_ = from._impl_.height_;

  // @@protoc_insertion_point(copy_constructor:HotStuff.Node)
}
inline PROTOBUF_NDEBUG_INLINE Node::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        parent_(arena),
        cmd_(arena) {}

inline void Node::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, justify_),
           0,
           offsetof(Impl_, height_) -
               offsetof(Impl_, justify_) +
               sizeof(Impl_::height_));
}
Node::~Node() {
  // @@protoc_insertion_point(destructor:HotStuff.Node)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Node::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.parent_.Destroy();
  _impl_.cmd_.Destroy();
  delete _impl_.justify_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Node::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Node, _impl_._cached_size_),
              false,
          },
          &Node::MergeImpl,
          &Node::kDescriptorMethods,
          &descriptor_table_HotStuffRPC_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> Node::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Node, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Node_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::HotStuff::Node>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .HotStuff.QC justify = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(Node, _impl_.justify_)}},
    // bytes parent = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Node, _impl_.parent_)}},
    // bytes cmd = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Node, _impl_.cmd_)}},
    // uint64 height = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Node, _impl_.height_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Node, _impl_.height_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes parent = 1;
    {PROTOBUF_FIELD_OFFSET(Node, _impl_.parent_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes cmd = 2;
    {PROTOBUF_FIELD_OFFSET(Node, _impl_.cmd_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint64 height = 3;
    {PROTOBUF_FIELD_OFFSET(Node, _impl_.height_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .HotStuff.QC justify = 4;
    {PROTOBUF_FIELD_OFFSET(Node, _impl_.justify_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::HotStuff::QC>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Node::Clear() {
// @@protoc_insertion_point(message_clear_start:HotStuff.Node)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parent_.ClearToEmpty();
  _impl_.cmd_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.justify_ != nullptr);
    _impl_.justify_->Clear();
  }
  _impl_.height_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Node::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HotStuff.Node)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes parent = 1;
  if (!this->_internal_parent().empty()) {
    const std::string& _s = this->_internal_parent();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // bytes cmd = 2;
  if (!this->_internal_cmd().empty()) {
    const std::string& _s = this->_internal_cmd();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // uint64 height = 3;
  if (this->_internal_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_height(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .HotStuff.QC justify = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.justify_, _impl_.justify_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HotStuff.Node)
  return target;
}

::size_t Node::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:HotStuff.Node)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // bytes parent = 1;
    if (!this->_internal_parent().empty()) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_parent());
    }
    // bytes cmd = 2;
    if (!this->_internal_cmd().empty()) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_cmd());
    }
  }
   {
    // .HotStuff.QC justify = 4;
    cached_has_bits = _impl_._has_bits_[0];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.justify_);
    }
  }
   {
    // uint64 height = 3;
    if (this->_internal_height() != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_height());
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Node::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Node*>(&to_msg);
  auto& from = static_cast<const Node&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:HotStuff.Node)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _this->_internal_set_parent(from._internal_parent());
  }
  if (!from._internal_cmd().empty()) {
    _this->_internal_set_cmd(from._internal_cmd());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.justify_ != nullptr);
    if (_this->_impl_.justify_ == nullptr) {
      _this->_impl_.justify_ =
          ::google::protobuf::Message::CopyConstruct<::HotStuff::QC>(arena, *from._impl_.justify_);
    } else {
      _this->_impl_.justify_->MergeFrom(*from._impl_.justify_);
    }
  }
  if (from._internal_height() != 0) {
    _this->_impl_.height_ = from._impl_.height_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Node::CopyFrom(const Node& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HotStuff.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Node::InternalSwap(Node* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.parent_, &other->_impl_.parent_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cmd_, &other->_impl_.cmd_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Node, _impl_.height_)
      + sizeof(Node::_impl_.height_)
      - PROTOBUF_FIELD_OFFSET(Node, _impl_.justify_)>(
          reinterpret_cast<char*>(&_impl_.justify_),
          reinterpret_cast<char*>(&other->_impl_.justify_));
}

::google::protobuf::Metadata Node::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QC::_Internal {
 public:
  using HasBits =
      decltype(std::declval<QC>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QC, _impl_._has_bits_);
};

QC::QC(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HotStuff.QC)
}
inline PROTOBUF_NDEBUG_INLINE QC::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::HotStuff::QC& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        sig_(arena, from.sig_) {}

QC::QC(
    ::google::protobuf::Arena* arena,
    const QC& from)
    : ::google::protobuf::Message(arena) {
  QC* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.node_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::HotStuff::Node>(
                              arena, *from._impl_.node_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, viewnumber_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, viewnumber_),
           offsetof(Impl_, type_) -
               offsetof(Impl_, viewnumber_) +
               sizeof(Impl_::type_));

  // @@protoc_insertion_point(copy_constructor:HotStuff.QC)
}
inline PROTOBUF_NDEBUG_INLINE QC::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        sig_(arena) {}

inline void QC::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, node_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, node_) +
               sizeof(Impl_::type_));
}
QC::~QC() {
  // @@protoc_insertion_point(destructor:HotStuff.QC)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void QC::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.sig_.Destroy();
  delete _impl_.node_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
QC::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(QC, _impl_._cached_size_),
              false,
          },
          &QC::MergeImpl,
          &QC::kDescriptorMethods,
          &descriptor_table_HotStuffRPC_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> QC::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QC, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_QC_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::HotStuff::QC>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes sig = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(QC, _impl_.sig_)}},
    // .HotStuff.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(QC, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(QC, _impl_.type_)}},
    // uint64 viewNumber = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(QC, _impl_.viewnumber_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(QC, _impl_.viewnumber_)}},
    // .HotStuff.Node node = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(QC, _impl_.node_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .HotStuff.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(QC, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint64 viewNumber = 2;
    {PROTOBUF_FIELD_OFFSET(QC, _impl_.viewnumber_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .HotStuff.Node node = 3;
    {PROTOBUF_FIELD_OFFSET(QC, _impl_.node_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes sig = 4;
    {PROTOBUF_FIELD_OFFSET(QC, _impl_.sig_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::HotStuff::Node>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void QC::Clear() {
// @@protoc_insertion_point(message_clear_start:HotStuff.QC)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sig_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.node_ != nullptr);
    _impl_.node_->Clear();
  }
  ::memset(&_impl_.viewnumber_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.type_) -
      reinterpret_cast<char*>(&_impl_.viewnumber_)) + sizeof(_impl_.type_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* QC::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HotStuff.QC)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .HotStuff.Type type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  // uint64 viewNumber = 2;
  if (this->_internal_viewnumber() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_viewnumber(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .HotStuff.Node node = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.node_, _impl_.node_->GetCachedSize(), target, stream);
  }

  // bytes sig = 4;
  if (!this->_internal_sig().empty()) {
    const std::string& _s = this->_internal_sig();
    target = stream->WriteBytesMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HotStuff.QC)
  return target;
}

::size_t QC::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:HotStuff.QC)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // bytes sig = 4;
    if (!this->_internal_sig().empty()) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_sig());
    }
  }
   {
    // .HotStuff.Node node = 3;
    cached_has_bits = _impl_._has_bits_[0];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.node_);
    }
  }
   {
    // uint64 viewNumber = 2;
    if (this->_internal_viewnumber() != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_viewnumber());
    }
    // .HotStuff.Type type = 1;
    if (this->_internal_type() != 0) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void QC::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QC*>(&to_msg);
  auto& from = static_cast<const QC&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:HotStuff.QC)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sig().empty()) {
    _this->_internal_set_sig(from._internal_sig());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.node_ != nullptr);
    if (_this->_impl_.node_ == nullptr) {
      _this->_impl_.node_ =
          ::google::protobuf::Message::CopyConstruct<::HotStuff::Node>(arena, *from._impl_.node_);
    } else {
      _this->_impl_.node_->MergeFrom(*from._impl_.node_);
    }
  }
  if (from._internal_viewnumber() != 0) {
    _this->_impl_.viewnumber_ = from._impl_.viewnumber_;
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QC::CopyFrom(const QC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HotStuff.QC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QC::InternalSwap(QC* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sig_, &other->_impl_.sig_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QC, _impl_.type_)
      + sizeof(QC::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(QC, _impl_.node_)>(
          reinterpret_cast<char*>(&_impl_.node_),
          reinterpret_cast<char*>(&other->_impl_.node_));
}

::google::protobuf::Metadata QC::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class msg_Data::_Internal {
 public:
  using HasBits =
      decltype(std::declval<msg_Data>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(msg_Data, _impl_._has_bits_);
};

msg_Data::msg_Data(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HotStuff.msg.Data)
}
inline PROTOBUF_NDEBUG_INLINE msg_Data::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::HotStuff::msg_Data& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

msg_Data::msg_Data(
    ::google::protobuf::Arena* arena,
    const msg_Data& from)
    : ::google::protobuf::Message(arena) {
  msg_Data* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.node_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::HotStuff::Node>(
                              arena, *from._impl_.node_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, viewnumber_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, viewnumber_),
           offsetof(Impl_, type_) -
               offsetof(Impl_, viewnumber_) +
               sizeof(Impl_::type_));

  // @@protoc_insertion_point(copy_constructor:HotStuff.msg.Data)
}
inline PROTOBUF_NDEBUG_INLINE msg_Data::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void msg_Data::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, node_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, node_) +
               sizeof(Impl_::type_));
}
msg_Data::~msg_Data() {
  // @@protoc_insertion_point(destructor:HotStuff.msg.Data)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void msg_Data::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.node_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
msg_Data::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(msg_Data, _impl_._cached_size_),
              false,
          },
          &msg_Data::MergeImpl,
          &msg_Data::kDescriptorMethods,
          &descriptor_table_HotStuffRPC_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> msg_Data::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(msg_Data, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_msg_Data_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::HotStuff::msg_Data>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .HotStuff.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(msg_Data, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(msg_Data, _impl_.type_)}},
    // uint64 viewNumber = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(msg_Data, _impl_.viewnumber_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(msg_Data, _impl_.viewnumber_)}},
    // optional .HotStuff.Node node = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(msg_Data, _impl_.node_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .HotStuff.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(msg_Data, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint64 viewNumber = 2;
    {PROTOBUF_FIELD_OFFSET(msg_Data, _impl_.viewnumber_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // optional .HotStuff.Node node = 3;
    {PROTOBUF_FIELD_OFFSET(msg_Data, _impl_.node_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::HotStuff::Node>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void msg_Data::Clear() {
// @@protoc_insertion_point(message_clear_start:HotStuff.msg.Data)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.node_ != nullptr);
    _impl_.node_->Clear();
  }
  ::memset(&_impl_.viewnumber_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.type_) -
      reinterpret_cast<char*>(&_impl_.viewnumber_)) + sizeof(_impl_.type_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* msg_Data::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HotStuff.msg.Data)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .HotStuff.Type type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  // uint64 viewNumber = 2;
  if (this->_internal_viewnumber() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_viewnumber(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .HotStuff.Node node = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.node_, _impl_.node_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HotStuff.msg.Data)
  return target;
}

::size_t msg_Data::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:HotStuff.msg.Data)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // optional .HotStuff.Node node = 3;
    cached_has_bits = _impl_._has_bits_[0];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.node_);
    }
  }
   {
    // uint64 viewNumber = 2;
    if (this->_internal_viewnumber() != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_viewnumber());
    }
    // .HotStuff.Type type = 1;
    if (this->_internal_type() != 0) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void msg_Data::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<msg_Data*>(&to_msg);
  auto& from = static_cast<const msg_Data&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:HotStuff.msg.Data)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.node_ != nullptr);
    if (_this->_impl_.node_ == nullptr) {
      _this->_impl_.node_ =
          ::google::protobuf::Message::CopyConstruct<::HotStuff::Node>(arena, *from._impl_.node_);
    } else {
      _this->_impl_.node_->MergeFrom(*from._impl_.node_);
    }
  }
  if (from._internal_viewnumber() != 0) {
    _this->_impl_.viewnumber_ = from._impl_.viewnumber_;
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void msg_Data::CopyFrom(const msg_Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HotStuff.msg.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void msg_Data::InternalSwap(msg_Data* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(msg_Data, _impl_.type_)
      + sizeof(msg_Data::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(msg_Data, _impl_.node_)>(
          reinterpret_cast<char*>(&_impl_.node_),
          reinterpret_cast<char*>(&other->_impl_.node_));
}

::google::protobuf::Metadata msg_Data::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class msg::_Internal {
 public:
  using HasBits =
      decltype(std::declval<msg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(msg, _impl_._has_bits_);
};

msg::msg(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HotStuff.msg)
}
inline PROTOBUF_NDEBUG_INLINE msg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::HotStuff::msg& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        senderid_(arena, from.senderid_),
        partialsig_(arena, from.partialsig_) {}

msg::msg(
    ::google::protobuf::Arena* arena,
    const msg& from)
    : ::google::protobuf::Message(arena) {
  msg* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.data_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::HotStuff::msg_Data>(
                              arena, *from._impl_.data_)
                        : nullptr;
  _impl_.justify_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::HotStuff::QC>(
                              arena, *from._impl_.justify_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:HotStuff.msg)
}
inline PROTOBUF_NDEBUG_INLINE msg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        senderid_(arena),
        partialsig_(arena) {}

inline void msg::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, data_),
           0,
           offsetof(Impl_, justify_) -
               offsetof(Impl_, data_) +
               sizeof(Impl_::justify_));
}
msg::~msg() {
  // @@protoc_insertion_point(destructor:HotStuff.msg)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void msg::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.senderid_.Destroy();
  _impl_.partialsig_.Destroy();
  delete _impl_.data_;
  delete _impl_.justify_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
msg::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(msg, _impl_._cached_size_),
              false,
          },
          &msg::MergeImpl,
          &msg::kDescriptorMethods,
          &descriptor_table_HotStuffRPC_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 0, 2> msg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(msg, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_msg_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::HotStuff::msg>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional bytes partialSig = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(msg, _impl_.partialsig_)}},
    // bytes senderId = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(msg, _impl_.senderid_)}},
    // .HotStuff.msg.Data data = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(msg, _impl_.data_)}},
    // optional .HotStuff.QC justify = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 1, PROTOBUF_FIELD_OFFSET(msg, _impl_.justify_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes senderId = 1;
    {PROTOBUF_FIELD_OFFSET(msg, _impl_.senderid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .HotStuff.msg.Data data = 2;
    {PROTOBUF_FIELD_OFFSET(msg, _impl_.data_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .HotStuff.QC justify = 3;
    {PROTOBUF_FIELD_OFFSET(msg, _impl_.justify_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bytes partialSig = 4;
    {PROTOBUF_FIELD_OFFSET(msg, _impl_.partialsig_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::HotStuff::msg_Data>()},
    {::_pbi::TcParser::GetTable<::HotStuff::QC>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void msg::Clear() {
// @@protoc_insertion_point(message_clear_start:HotStuff.msg)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.senderid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.partialsig_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.data_ != nullptr);
      _impl_.data_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.justify_ != nullptr);
      _impl_.justify_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* msg::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HotStuff.msg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes senderId = 1;
  if (!this->_internal_senderid().empty()) {
    const std::string& _s = this->_internal_senderid();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .HotStuff.msg.Data data = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.data_, _impl_.data_->GetCachedSize(), target, stream);
  }

  // optional .HotStuff.QC justify = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.justify_, _impl_.justify_->GetCachedSize(), target, stream);
  }

  // optional bytes partialSig = 4;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_partialsig();
    target = stream->WriteBytesMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HotStuff.msg)
  return target;
}

::size_t msg::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:HotStuff.msg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // bytes senderId = 1;
    if (!this->_internal_senderid().empty()) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_senderid());
    }
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bytes partialSig = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_partialsig());
    }
    // .HotStuff.msg.Data data = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.data_);
    }
    // optional .HotStuff.QC justify = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.justify_);
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void msg::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<msg*>(&to_msg);
  auto& from = static_cast<const msg&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:HotStuff.msg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_senderid().empty()) {
    _this->_internal_set_senderid(from._internal_senderid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_partialsig(from._internal_partialsig());
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.data_ != nullptr);
      if (_this->_impl_.data_ == nullptr) {
        _this->_impl_.data_ =
            ::google::protobuf::Message::CopyConstruct<::HotStuff::msg_Data>(arena, *from._impl_.data_);
      } else {
        _this->_impl_.data_->MergeFrom(*from._impl_.data_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.justify_ != nullptr);
      if (_this->_impl_.justify_ == nullptr) {
        _this->_impl_.justify_ =
            ::google::protobuf::Message::CopyConstruct<::HotStuff::QC>(arena, *from._impl_.justify_);
      } else {
        _this->_impl_.justify_->MergeFrom(*from._impl_.justify_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void msg::CopyFrom(const msg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HotStuff.msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void msg::InternalSwap(msg* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.senderid_, &other->_impl_.senderid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.partialsig_, &other->_impl_.partialsig_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(msg, _impl_.justify_)
      + sizeof(msg::_impl_.justify_)
      - PROTOBUF_FIELD_OFFSET(msg, _impl_.data_)>(
          reinterpret_cast<char*>(&_impl_.data_),
          reinterpret_cast<char*>(&other->_impl_.data_));
}

::google::protobuf::Metadata msg::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace HotStuff
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_HotStuffRPC_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
