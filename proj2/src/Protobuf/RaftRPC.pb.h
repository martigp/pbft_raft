// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RaftRPC.proto
// Protobuf C++ Version: 4.26.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED_RaftRPC_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_RaftRPC_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION != 4026000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_RaftRPC_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_RaftRPC_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_RaftRPC_2eproto;
class RPC;
struct RPCDefaultTypeInternal;
extern RPCDefaultTypeInternal _RPC_default_instance_;
class RPC_AppendEntries;
struct RPC_AppendEntriesDefaultTypeInternal;
extern RPC_AppendEntriesDefaultTypeInternal _RPC_AppendEntries_default_instance_;
class RPC_AppendEntries_Request;
struct RPC_AppendEntries_RequestDefaultTypeInternal;
extern RPC_AppendEntries_RequestDefaultTypeInternal _RPC_AppendEntries_Request_default_instance_;
class RPC_AppendEntries_Request_Entry;
struct RPC_AppendEntries_Request_EntryDefaultTypeInternal;
extern RPC_AppendEntries_Request_EntryDefaultTypeInternal _RPC_AppendEntries_Request_Entry_default_instance_;
class RPC_AppendEntries_Response;
struct RPC_AppendEntries_ResponseDefaultTypeInternal;
extern RPC_AppendEntries_ResponseDefaultTypeInternal _RPC_AppendEntries_Response_default_instance_;
class RPC_RequestVote;
struct RPC_RequestVoteDefaultTypeInternal;
extern RPC_RequestVoteDefaultTypeInternal _RPC_RequestVote_default_instance_;
class RPC_RequestVote_Request;
struct RPC_RequestVote_RequestDefaultTypeInternal;
extern RPC_RequestVote_RequestDefaultTypeInternal _RPC_RequestVote_Request_default_instance_;
class RPC_RequestVote_Response;
struct RPC_RequestVote_ResponseDefaultTypeInternal;
extern RPC_RequestVote_ResponseDefaultTypeInternal _RPC_RequestVote_Response_default_instance_;
class RPC_StateMachineCmd;
struct RPC_StateMachineCmdDefaultTypeInternal;
extern RPC_StateMachineCmdDefaultTypeInternal _RPC_StateMachineCmd_default_instance_;
class RPC_StateMachineCmd_Request;
struct RPC_StateMachineCmd_RequestDefaultTypeInternal;
extern RPC_StateMachineCmd_RequestDefaultTypeInternal _RPC_StateMachineCmd_Request_default_instance_;
class RPC_StateMachineCmd_Response;
struct RPC_StateMachineCmd_ResponseDefaultTypeInternal;
extern RPC_StateMachineCmd_ResponseDefaultTypeInternal _RPC_StateMachineCmd_Response_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class RPC_StateMachineCmd_Response final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:RPC.StateMachineCmd.Response) */ {
 public:
  inline RPC_StateMachineCmd_Response() : RPC_StateMachineCmd_Response(nullptr) {}
  ~RPC_StateMachineCmd_Response() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RPC_StateMachineCmd_Response(
      ::google::protobuf::internal::ConstantInitialized);

  inline RPC_StateMachineCmd_Response(const RPC_StateMachineCmd_Response& from) : RPC_StateMachineCmd_Response(nullptr, from) {}
  inline RPC_StateMachineCmd_Response(RPC_StateMachineCmd_Response&& from) noexcept
      : RPC_StateMachineCmd_Response(nullptr, std::move(from)) {}
  inline RPC_StateMachineCmd_Response& operator=(const RPC_StateMachineCmd_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline RPC_StateMachineCmd_Response& operator=(RPC_StateMachineCmd_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RPC_StateMachineCmd_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const RPC_StateMachineCmd_Response* internal_default_instance() {
    return reinterpret_cast<const RPC_StateMachineCmd_Response*>(
        &_RPC_StateMachineCmd_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(RPC_StateMachineCmd_Response& a, RPC_StateMachineCmd_Response& b) { a.Swap(&b); }
  inline void Swap(RPC_StateMachineCmd_Response* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RPC_StateMachineCmd_Response* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RPC_StateMachineCmd_Response* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RPC_StateMachineCmd_Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RPC_StateMachineCmd_Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RPC_StateMachineCmd_Response& from) { RPC_StateMachineCmd_Response::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RPC_StateMachineCmd_Response* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "RPC.StateMachineCmd.Response"; }

 protected:
  explicit RPC_StateMachineCmd_Response(::google::protobuf::Arena* arena);
  RPC_StateMachineCmd_Response(::google::protobuf::Arena* arena, const RPC_StateMachineCmd_Response& from);
  RPC_StateMachineCmd_Response(::google::protobuf::Arena* arena, RPC_StateMachineCmd_Response&& from) noexcept
      : RPC_StateMachineCmd_Response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMsgFieldNumber = 3,
    kLeaderIdFieldNumber = 2,
    kSuccessFieldNumber = 1,
  };
  // bytes msg = 3;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* value);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // uint64 leaderId = 2;
  void clear_leaderid() ;
  ::uint64_t leaderid() const;
  void set_leaderid(::uint64_t value);

  private:
  ::uint64_t _internal_leaderid() const;
  void _internal_set_leaderid(::uint64_t value);

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:RPC.StateMachineCmd.Response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr msg_;
    ::uint64_t leaderid_;
    bool success_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_RaftRPC_2eproto;
};
// -------------------------------------------------------------------

class RPC_StateMachineCmd_Request final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:RPC.StateMachineCmd.Request) */ {
 public:
  inline RPC_StateMachineCmd_Request() : RPC_StateMachineCmd_Request(nullptr) {}
  ~RPC_StateMachineCmd_Request() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RPC_StateMachineCmd_Request(
      ::google::protobuf::internal::ConstantInitialized);

  inline RPC_StateMachineCmd_Request(const RPC_StateMachineCmd_Request& from) : RPC_StateMachineCmd_Request(nullptr, from) {}
  inline RPC_StateMachineCmd_Request(RPC_StateMachineCmd_Request&& from) noexcept
      : RPC_StateMachineCmd_Request(nullptr, std::move(from)) {}
  inline RPC_StateMachineCmd_Request& operator=(const RPC_StateMachineCmd_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline RPC_StateMachineCmd_Request& operator=(RPC_StateMachineCmd_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RPC_StateMachineCmd_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const RPC_StateMachineCmd_Request* internal_default_instance() {
    return reinterpret_cast<const RPC_StateMachineCmd_Request*>(
        &_RPC_StateMachineCmd_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(RPC_StateMachineCmd_Request& a, RPC_StateMachineCmd_Request& b) { a.Swap(&b); }
  inline void Swap(RPC_StateMachineCmd_Request* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RPC_StateMachineCmd_Request* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RPC_StateMachineCmd_Request* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RPC_StateMachineCmd_Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RPC_StateMachineCmd_Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RPC_StateMachineCmd_Request& from) { RPC_StateMachineCmd_Request::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RPC_StateMachineCmd_Request* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "RPC.StateMachineCmd.Request"; }

 protected:
  explicit RPC_StateMachineCmd_Request(::google::protobuf::Arena* arena);
  RPC_StateMachineCmd_Request(::google::protobuf::Arena* arena, const RPC_StateMachineCmd_Request& from);
  RPC_StateMachineCmd_Request(::google::protobuf::Arena* arena, RPC_StateMachineCmd_Request&& from) noexcept
      : RPC_StateMachineCmd_Request(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCmdFieldNumber = 1,
  };
  // bytes cmd = 1;
  void clear_cmd() ;
  const std::string& cmd() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cmd(Arg_&& arg, Args_... args);
  std::string* mutable_cmd();
  PROTOBUF_NODISCARD std::string* release_cmd();
  void set_allocated_cmd(std::string* value);

  private:
  const std::string& _internal_cmd() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cmd(
      const std::string& value);
  std::string* _internal_mutable_cmd();

  public:
  // @@protoc_insertion_point(class_scope:RPC.StateMachineCmd.Request)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr cmd_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_RaftRPC_2eproto;
};
// -------------------------------------------------------------------

class RPC_StateMachineCmd final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:RPC.StateMachineCmd) */ {
 public:
  inline RPC_StateMachineCmd() : RPC_StateMachineCmd(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RPC_StateMachineCmd(
      ::google::protobuf::internal::ConstantInitialized);

  inline RPC_StateMachineCmd(const RPC_StateMachineCmd& from) : RPC_StateMachineCmd(nullptr, from) {}
  inline RPC_StateMachineCmd(RPC_StateMachineCmd&& from) noexcept
      : RPC_StateMachineCmd(nullptr, std::move(from)) {}
  inline RPC_StateMachineCmd& operator=(const RPC_StateMachineCmd& from) {
    CopyFrom(from);
    return *this;
  }
  inline RPC_StateMachineCmd& operator=(RPC_StateMachineCmd&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RPC_StateMachineCmd& default_instance() {
    return *internal_default_instance();
  }
  static inline const RPC_StateMachineCmd* internal_default_instance() {
    return reinterpret_cast<const RPC_StateMachineCmd*>(
        &_RPC_StateMachineCmd_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(RPC_StateMachineCmd& a, RPC_StateMachineCmd& b) { a.Swap(&b); }
  inline void Swap(RPC_StateMachineCmd* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RPC_StateMachineCmd* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RPC_StateMachineCmd* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<RPC_StateMachineCmd>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const RPC_StateMachineCmd& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const RPC_StateMachineCmd& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "RPC.StateMachineCmd"; }

 protected:
  explicit RPC_StateMachineCmd(::google::protobuf::Arena* arena);
  RPC_StateMachineCmd(::google::protobuf::Arena* arena, const RPC_StateMachineCmd& from);
  RPC_StateMachineCmd(::google::protobuf::Arena* arena, RPC_StateMachineCmd&& from) noexcept
      : RPC_StateMachineCmd(arena) {
    *this = ::std::move(from);
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------
  using Request = RPC_StateMachineCmd_Request;
  using Response = RPC_StateMachineCmd_Response;

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:RPC.StateMachineCmd)
 private:
  class _Internal;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_RaftRPC_2eproto;
};
// -------------------------------------------------------------------

class RPC_RequestVote_Response final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:RPC.RequestVote.Response) */ {
 public:
  inline RPC_RequestVote_Response() : RPC_RequestVote_Response(nullptr) {}
  ~RPC_RequestVote_Response() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RPC_RequestVote_Response(
      ::google::protobuf::internal::ConstantInitialized);

  inline RPC_RequestVote_Response(const RPC_RequestVote_Response& from) : RPC_RequestVote_Response(nullptr, from) {}
  inline RPC_RequestVote_Response(RPC_RequestVote_Response&& from) noexcept
      : RPC_RequestVote_Response(nullptr, std::move(from)) {}
  inline RPC_RequestVote_Response& operator=(const RPC_RequestVote_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline RPC_RequestVote_Response& operator=(RPC_RequestVote_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RPC_RequestVote_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const RPC_RequestVote_Response* internal_default_instance() {
    return reinterpret_cast<const RPC_RequestVote_Response*>(
        &_RPC_RequestVote_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(RPC_RequestVote_Response& a, RPC_RequestVote_Response& b) { a.Swap(&b); }
  inline void Swap(RPC_RequestVote_Response* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RPC_RequestVote_Response* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RPC_RequestVote_Response* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RPC_RequestVote_Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RPC_RequestVote_Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RPC_RequestVote_Response& from) { RPC_RequestVote_Response::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RPC_RequestVote_Response* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "RPC.RequestVote.Response"; }

 protected:
  explicit RPC_RequestVote_Response(::google::protobuf::Arena* arena);
  RPC_RequestVote_Response(::google::protobuf::Arena* arena, const RPC_RequestVote_Response& from);
  RPC_RequestVote_Response(::google::protobuf::Arena* arena, RPC_RequestVote_Response&& from) noexcept
      : RPC_RequestVote_Response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTermFieldNumber = 1,
    kVoteGrantedFieldNumber = 2,
  };
  // uint64 term = 1;
  void clear_term() ;
  ::uint64_t term() const;
  void set_term(::uint64_t value);

  private:
  ::uint64_t _internal_term() const;
  void _internal_set_term(::uint64_t value);

  public:
  // bool voteGranted = 2;
  void clear_votegranted() ;
  bool votegranted() const;
  void set_votegranted(bool value);

  private:
  bool _internal_votegranted() const;
  void _internal_set_votegranted(bool value);

  public:
  // @@protoc_insertion_point(class_scope:RPC.RequestVote.Response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t term_;
    bool votegranted_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_RaftRPC_2eproto;
};
// -------------------------------------------------------------------

class RPC_RequestVote_Request final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:RPC.RequestVote.Request) */ {
 public:
  inline RPC_RequestVote_Request() : RPC_RequestVote_Request(nullptr) {}
  ~RPC_RequestVote_Request() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RPC_RequestVote_Request(
      ::google::protobuf::internal::ConstantInitialized);

  inline RPC_RequestVote_Request(const RPC_RequestVote_Request& from) : RPC_RequestVote_Request(nullptr, from) {}
  inline RPC_RequestVote_Request(RPC_RequestVote_Request&& from) noexcept
      : RPC_RequestVote_Request(nullptr, std::move(from)) {}
  inline RPC_RequestVote_Request& operator=(const RPC_RequestVote_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline RPC_RequestVote_Request& operator=(RPC_RequestVote_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RPC_RequestVote_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const RPC_RequestVote_Request* internal_default_instance() {
    return reinterpret_cast<const RPC_RequestVote_Request*>(
        &_RPC_RequestVote_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(RPC_RequestVote_Request& a, RPC_RequestVote_Request& b) { a.Swap(&b); }
  inline void Swap(RPC_RequestVote_Request* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RPC_RequestVote_Request* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RPC_RequestVote_Request* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RPC_RequestVote_Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RPC_RequestVote_Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RPC_RequestVote_Request& from) { RPC_RequestVote_Request::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RPC_RequestVote_Request* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "RPC.RequestVote.Request"; }

 protected:
  explicit RPC_RequestVote_Request(::google::protobuf::Arena* arena);
  RPC_RequestVote_Request(::google::protobuf::Arena* arena, const RPC_RequestVote_Request& from);
  RPC_RequestVote_Request(::google::protobuf::Arena* arena, RPC_RequestVote_Request&& from) noexcept
      : RPC_RequestVote_Request(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTermFieldNumber = 1,
    kCandidateIdFieldNumber = 2,
    kLastLogIndexFieldNumber = 3,
    kLastLogTermFieldNumber = 4,
  };
  // uint64 term = 1;
  void clear_term() ;
  ::uint64_t term() const;
  void set_term(::uint64_t value);

  private:
  ::uint64_t _internal_term() const;
  void _internal_set_term(::uint64_t value);

  public:
  // uint64 candidateId = 2;
  void clear_candidateid() ;
  ::uint64_t candidateid() const;
  void set_candidateid(::uint64_t value);

  private:
  ::uint64_t _internal_candidateid() const;
  void _internal_set_candidateid(::uint64_t value);

  public:
  // uint64 lastLogIndex = 3;
  void clear_lastlogindex() ;
  ::uint64_t lastlogindex() const;
  void set_lastlogindex(::uint64_t value);

  private:
  ::uint64_t _internal_lastlogindex() const;
  void _internal_set_lastlogindex(::uint64_t value);

  public:
  // uint64 lastLogTerm = 4;
  void clear_lastlogterm() ;
  ::uint64_t lastlogterm() const;
  void set_lastlogterm(::uint64_t value);

  private:
  ::uint64_t _internal_lastlogterm() const;
  void _internal_set_lastlogterm(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:RPC.RequestVote.Request)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t term_;
    ::uint64_t candidateid_;
    ::uint64_t lastlogindex_;
    ::uint64_t lastlogterm_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_RaftRPC_2eproto;
};
// -------------------------------------------------------------------

class RPC_RequestVote final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:RPC.RequestVote) */ {
 public:
  inline RPC_RequestVote() : RPC_RequestVote(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RPC_RequestVote(
      ::google::protobuf::internal::ConstantInitialized);

  inline RPC_RequestVote(const RPC_RequestVote& from) : RPC_RequestVote(nullptr, from) {}
  inline RPC_RequestVote(RPC_RequestVote&& from) noexcept
      : RPC_RequestVote(nullptr, std::move(from)) {}
  inline RPC_RequestVote& operator=(const RPC_RequestVote& from) {
    CopyFrom(from);
    return *this;
  }
  inline RPC_RequestVote& operator=(RPC_RequestVote&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RPC_RequestVote& default_instance() {
    return *internal_default_instance();
  }
  static inline const RPC_RequestVote* internal_default_instance() {
    return reinterpret_cast<const RPC_RequestVote*>(
        &_RPC_RequestVote_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(RPC_RequestVote& a, RPC_RequestVote& b) { a.Swap(&b); }
  inline void Swap(RPC_RequestVote* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RPC_RequestVote* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RPC_RequestVote* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<RPC_RequestVote>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const RPC_RequestVote& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const RPC_RequestVote& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "RPC.RequestVote"; }

 protected:
  explicit RPC_RequestVote(::google::protobuf::Arena* arena);
  RPC_RequestVote(::google::protobuf::Arena* arena, const RPC_RequestVote& from);
  RPC_RequestVote(::google::protobuf::Arena* arena, RPC_RequestVote&& from) noexcept
      : RPC_RequestVote(arena) {
    *this = ::std::move(from);
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------
  using Request = RPC_RequestVote_Request;
  using Response = RPC_RequestVote_Response;

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:RPC.RequestVote)
 private:
  class _Internal;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_RaftRPC_2eproto;
};
// -------------------------------------------------------------------

class RPC_AppendEntries_Response final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:RPC.AppendEntries.Response) */ {
 public:
  inline RPC_AppendEntries_Response() : RPC_AppendEntries_Response(nullptr) {}
  ~RPC_AppendEntries_Response() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RPC_AppendEntries_Response(
      ::google::protobuf::internal::ConstantInitialized);

  inline RPC_AppendEntries_Response(const RPC_AppendEntries_Response& from) : RPC_AppendEntries_Response(nullptr, from) {}
  inline RPC_AppendEntries_Response(RPC_AppendEntries_Response&& from) noexcept
      : RPC_AppendEntries_Response(nullptr, std::move(from)) {}
  inline RPC_AppendEntries_Response& operator=(const RPC_AppendEntries_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline RPC_AppendEntries_Response& operator=(RPC_AppendEntries_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RPC_AppendEntries_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const RPC_AppendEntries_Response* internal_default_instance() {
    return reinterpret_cast<const RPC_AppendEntries_Response*>(
        &_RPC_AppendEntries_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(RPC_AppendEntries_Response& a, RPC_AppendEntries_Response& b) { a.Swap(&b); }
  inline void Swap(RPC_AppendEntries_Response* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RPC_AppendEntries_Response* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RPC_AppendEntries_Response* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RPC_AppendEntries_Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RPC_AppendEntries_Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RPC_AppendEntries_Response& from) { RPC_AppendEntries_Response::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RPC_AppendEntries_Response* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "RPC.AppendEntries.Response"; }

 protected:
  explicit RPC_AppendEntries_Response(::google::protobuf::Arena* arena);
  RPC_AppendEntries_Response(::google::protobuf::Arena* arena, const RPC_AppendEntries_Response& from);
  RPC_AppendEntries_Response(::google::protobuf::Arena* arena, RPC_AppendEntries_Response&& from) noexcept
      : RPC_AppendEntries_Response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTermFieldNumber = 1,
    kRequestIDFieldNumber = 3,
    kSuccessFieldNumber = 2,
  };
  // uint64 term = 1;
  void clear_term() ;
  ::uint64_t term() const;
  void set_term(::uint64_t value);

  private:
  ::uint64_t _internal_term() const;
  void _internal_set_term(::uint64_t value);

  public:
  // uint64 requestID = 3;
  void clear_requestid() ;
  ::uint64_t requestid() const;
  void set_requestid(::uint64_t value);

  private:
  ::uint64_t _internal_requestid() const;
  void _internal_set_requestid(::uint64_t value);

  public:
  // bool success = 2;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:RPC.AppendEntries.Response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t term_;
    ::uint64_t requestid_;
    bool success_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_RaftRPC_2eproto;
};
// -------------------------------------------------------------------

class RPC_AppendEntries_Request_Entry final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:RPC.AppendEntries.Request.Entry) */ {
 public:
  inline RPC_AppendEntries_Request_Entry() : RPC_AppendEntries_Request_Entry(nullptr) {}
  ~RPC_AppendEntries_Request_Entry() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RPC_AppendEntries_Request_Entry(
      ::google::protobuf::internal::ConstantInitialized);

  inline RPC_AppendEntries_Request_Entry(const RPC_AppendEntries_Request_Entry& from) : RPC_AppendEntries_Request_Entry(nullptr, from) {}
  inline RPC_AppendEntries_Request_Entry(RPC_AppendEntries_Request_Entry&& from) noexcept
      : RPC_AppendEntries_Request_Entry(nullptr, std::move(from)) {}
  inline RPC_AppendEntries_Request_Entry& operator=(const RPC_AppendEntries_Request_Entry& from) {
    CopyFrom(from);
    return *this;
  }
  inline RPC_AppendEntries_Request_Entry& operator=(RPC_AppendEntries_Request_Entry&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RPC_AppendEntries_Request_Entry& default_instance() {
    return *internal_default_instance();
  }
  static inline const RPC_AppendEntries_Request_Entry* internal_default_instance() {
    return reinterpret_cast<const RPC_AppendEntries_Request_Entry*>(
        &_RPC_AppendEntries_Request_Entry_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(RPC_AppendEntries_Request_Entry& a, RPC_AppendEntries_Request_Entry& b) { a.Swap(&b); }
  inline void Swap(RPC_AppendEntries_Request_Entry* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RPC_AppendEntries_Request_Entry* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RPC_AppendEntries_Request_Entry* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RPC_AppendEntries_Request_Entry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RPC_AppendEntries_Request_Entry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RPC_AppendEntries_Request_Entry& from) { RPC_AppendEntries_Request_Entry::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RPC_AppendEntries_Request_Entry* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "RPC.AppendEntries.Request.Entry"; }

 protected:
  explicit RPC_AppendEntries_Request_Entry(::google::protobuf::Arena* arena);
  RPC_AppendEntries_Request_Entry(::google::protobuf::Arena* arena, const RPC_AppendEntries_Request_Entry& from);
  RPC_AppendEntries_Request_Entry(::google::protobuf::Arena* arena, RPC_AppendEntries_Request_Entry&& from) noexcept
      : RPC_AppendEntries_Request_Entry(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCmdFieldNumber = 1,
  };
  // bytes cmd = 1;
  void clear_cmd() ;
  const std::string& cmd() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cmd(Arg_&& arg, Args_... args);
  std::string* mutable_cmd();
  PROTOBUF_NODISCARD std::string* release_cmd();
  void set_allocated_cmd(std::string* value);

  private:
  const std::string& _internal_cmd() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cmd(
      const std::string& value);
  std::string* _internal_mutable_cmd();

  public:
  // @@protoc_insertion_point(class_scope:RPC.AppendEntries.Request.Entry)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr cmd_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_RaftRPC_2eproto;
};
// -------------------------------------------------------------------

class RPC_AppendEntries final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:RPC.AppendEntries) */ {
 public:
  inline RPC_AppendEntries() : RPC_AppendEntries(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RPC_AppendEntries(
      ::google::protobuf::internal::ConstantInitialized);

  inline RPC_AppendEntries(const RPC_AppendEntries& from) : RPC_AppendEntries(nullptr, from) {}
  inline RPC_AppendEntries(RPC_AppendEntries&& from) noexcept
      : RPC_AppendEntries(nullptr, std::move(from)) {}
  inline RPC_AppendEntries& operator=(const RPC_AppendEntries& from) {
    CopyFrom(from);
    return *this;
  }
  inline RPC_AppendEntries& operator=(RPC_AppendEntries&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RPC_AppendEntries& default_instance() {
    return *internal_default_instance();
  }
  static inline const RPC_AppendEntries* internal_default_instance() {
    return reinterpret_cast<const RPC_AppendEntries*>(
        &_RPC_AppendEntries_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(RPC_AppendEntries& a, RPC_AppendEntries& b) { a.Swap(&b); }
  inline void Swap(RPC_AppendEntries* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RPC_AppendEntries* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RPC_AppendEntries* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<RPC_AppendEntries>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const RPC_AppendEntries& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const RPC_AppendEntries& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "RPC.AppendEntries"; }

 protected:
  explicit RPC_AppendEntries(::google::protobuf::Arena* arena);
  RPC_AppendEntries(::google::protobuf::Arena* arena, const RPC_AppendEntries& from);
  RPC_AppendEntries(::google::protobuf::Arena* arena, RPC_AppendEntries&& from) noexcept
      : RPC_AppendEntries(arena) {
    *this = ::std::move(from);
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------
  using Request = RPC_AppendEntries_Request;
  using Response = RPC_AppendEntries_Response;

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:RPC.AppendEntries)
 private:
  class _Internal;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_RaftRPC_2eproto;
};
// -------------------------------------------------------------------

class RPC_AppendEntries_Request final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:RPC.AppendEntries.Request) */ {
 public:
  inline RPC_AppendEntries_Request() : RPC_AppendEntries_Request(nullptr) {}
  ~RPC_AppendEntries_Request() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RPC_AppendEntries_Request(
      ::google::protobuf::internal::ConstantInitialized);

  inline RPC_AppendEntries_Request(const RPC_AppendEntries_Request& from) : RPC_AppendEntries_Request(nullptr, from) {}
  inline RPC_AppendEntries_Request(RPC_AppendEntries_Request&& from) noexcept
      : RPC_AppendEntries_Request(nullptr, std::move(from)) {}
  inline RPC_AppendEntries_Request& operator=(const RPC_AppendEntries_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline RPC_AppendEntries_Request& operator=(RPC_AppendEntries_Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RPC_AppendEntries_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const RPC_AppendEntries_Request* internal_default_instance() {
    return reinterpret_cast<const RPC_AppendEntries_Request*>(
        &_RPC_AppendEntries_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(RPC_AppendEntries_Request& a, RPC_AppendEntries_Request& b) { a.Swap(&b); }
  inline void Swap(RPC_AppendEntries_Request* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RPC_AppendEntries_Request* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RPC_AppendEntries_Request* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RPC_AppendEntries_Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RPC_AppendEntries_Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RPC_AppendEntries_Request& from) { RPC_AppendEntries_Request::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RPC_AppendEntries_Request* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "RPC.AppendEntries.Request"; }

 protected:
  explicit RPC_AppendEntries_Request(::google::protobuf::Arena* arena);
  RPC_AppendEntries_Request(::google::protobuf::Arena* arena, const RPC_AppendEntries_Request& from);
  RPC_AppendEntries_Request(::google::protobuf::Arena* arena, RPC_AppendEntries_Request&& from) noexcept
      : RPC_AppendEntries_Request(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------
  using Entry = RPC_AppendEntries_Request_Entry;

  // accessors -------------------------------------------------------
  enum : int {
    kEntriesFieldNumber = 5,
    kTermFieldNumber = 1,
    kLeaderIdFieldNumber = 2,
    kPrevLogIndexFieldNumber = 3,
    kPrevLogTermFieldNumber = 4,
    kLeaderCommitFieldNumber = 6,
    kRequestIDFieldNumber = 7,
  };
  // repeated .RPC.AppendEntries.Request.Entry entries = 5;
  int entries_size() const;
  private:
  int _internal_entries_size() const;

  public:
  void clear_entries() ;
  ::RPC_AppendEntries_Request_Entry* mutable_entries(int index);
  ::google::protobuf::RepeatedPtrField<::RPC_AppendEntries_Request_Entry>* mutable_entries();

  private:
  const ::google::protobuf::RepeatedPtrField<::RPC_AppendEntries_Request_Entry>& _internal_entries() const;
  ::google::protobuf::RepeatedPtrField<::RPC_AppendEntries_Request_Entry>* _internal_mutable_entries();
  public:
  const ::RPC_AppendEntries_Request_Entry& entries(int index) const;
  ::RPC_AppendEntries_Request_Entry* add_entries();
  const ::google::protobuf::RepeatedPtrField<::RPC_AppendEntries_Request_Entry>& entries() const;
  // uint64 term = 1;
  void clear_term() ;
  ::uint64_t term() const;
  void set_term(::uint64_t value);

  private:
  ::uint64_t _internal_term() const;
  void _internal_set_term(::uint64_t value);

  public:
  // uint64 leaderId = 2;
  void clear_leaderid() ;
  ::uint64_t leaderid() const;
  void set_leaderid(::uint64_t value);

  private:
  ::uint64_t _internal_leaderid() const;
  void _internal_set_leaderid(::uint64_t value);

  public:
  // uint64 prevLogIndex = 3;
  void clear_prevlogindex() ;
  ::uint64_t prevlogindex() const;
  void set_prevlogindex(::uint64_t value);

  private:
  ::uint64_t _internal_prevlogindex() const;
  void _internal_set_prevlogindex(::uint64_t value);

  public:
  // uint64 prevLogTerm = 4;
  void clear_prevlogterm() ;
  ::uint64_t prevlogterm() const;
  void set_prevlogterm(::uint64_t value);

  private:
  ::uint64_t _internal_prevlogterm() const;
  void _internal_set_prevlogterm(::uint64_t value);

  public:
  // uint64 leaderCommit = 6;
  void clear_leadercommit() ;
  ::uint64_t leadercommit() const;
  void set_leadercommit(::uint64_t value);

  private:
  ::uint64_t _internal_leadercommit() const;
  void _internal_set_leadercommit(::uint64_t value);

  public:
  // uint64 requestID = 7;
  void clear_requestid() ;
  ::uint64_t requestid() const;
  void set_requestid(::uint64_t value);

  private:
  ::uint64_t _internal_requestid() const;
  void _internal_set_requestid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:RPC.AppendEntries.Request)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::RPC_AppendEntries_Request_Entry > entries_;
    ::uint64_t term_;
    ::uint64_t leaderid_;
    ::uint64_t prevlogindex_;
    ::uint64_t prevlogterm_;
    ::uint64_t leadercommit_;
    ::uint64_t requestid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_RaftRPC_2eproto;
};
// -------------------------------------------------------------------

class RPC final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:RPC) */ {
 public:
  inline RPC() : RPC(nullptr) {}
  ~RPC() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RPC(
      ::google::protobuf::internal::ConstantInitialized);

  inline RPC(const RPC& from) : RPC(nullptr, from) {}
  inline RPC(RPC&& from) noexcept
      : RPC(nullptr, std::move(from)) {}
  inline RPC& operator=(const RPC& from) {
    CopyFrom(from);
    return *this;
  }
  inline RPC& operator=(RPC&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RPC& default_instance() {
    return *internal_default_instance();
  }
  enum MsgCase {
    kAppendEntriesReq = 1,
    kAppendEntriesResp = 2,
    kRequestVoteReq = 3,
    kRequestVoteResp = 4,
    kStateMachineCmdReq = 5,
    kStateMachineCmdResp = 6,
    MSG_NOT_SET = 0,
  };
  static inline const RPC* internal_default_instance() {
    return reinterpret_cast<const RPC*>(
        &_RPC_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(RPC& a, RPC& b) { a.Swap(&b); }
  inline void Swap(RPC* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RPC* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RPC* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RPC>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RPC& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RPC& from) { RPC::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RPC* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "RPC"; }

 protected:
  explicit RPC(::google::protobuf::Arena* arena);
  RPC(::google::protobuf::Arena* arena, const RPC& from);
  RPC(::google::protobuf::Arena* arena, RPC&& from) noexcept
      : RPC(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------
  using AppendEntries = RPC_AppendEntries;
  using RequestVote = RPC_RequestVote;
  using StateMachineCmd = RPC_StateMachineCmd;

  // accessors -------------------------------------------------------
  enum : int {
    kAppendEntriesReqFieldNumber = 1,
    kAppendEntriesRespFieldNumber = 2,
    kRequestVoteReqFieldNumber = 3,
    kRequestVoteRespFieldNumber = 4,
    kStateMachineCmdReqFieldNumber = 5,
    kStateMachineCmdRespFieldNumber = 6,
  };
  // .RPC.AppendEntries.Request appendEntriesReq = 1;
  bool has_appendentriesreq() const;
  private:
  bool _internal_has_appendentriesreq() const;

  public:
  void clear_appendentriesreq() ;
  const ::RPC_AppendEntries_Request& appendentriesreq() const;
  PROTOBUF_NODISCARD ::RPC_AppendEntries_Request* release_appendentriesreq();
  ::RPC_AppendEntries_Request* mutable_appendentriesreq();
  void set_allocated_appendentriesreq(::RPC_AppendEntries_Request* value);
  void unsafe_arena_set_allocated_appendentriesreq(::RPC_AppendEntries_Request* value);
  ::RPC_AppendEntries_Request* unsafe_arena_release_appendentriesreq();

  private:
  const ::RPC_AppendEntries_Request& _internal_appendentriesreq() const;
  ::RPC_AppendEntries_Request* _internal_mutable_appendentriesreq();

  public:
  // .RPC.AppendEntries.Response appendEntriesResp = 2;
  bool has_appendentriesresp() const;
  private:
  bool _internal_has_appendentriesresp() const;

  public:
  void clear_appendentriesresp() ;
  const ::RPC_AppendEntries_Response& appendentriesresp() const;
  PROTOBUF_NODISCARD ::RPC_AppendEntries_Response* release_appendentriesresp();
  ::RPC_AppendEntries_Response* mutable_appendentriesresp();
  void set_allocated_appendentriesresp(::RPC_AppendEntries_Response* value);
  void unsafe_arena_set_allocated_appendentriesresp(::RPC_AppendEntries_Response* value);
  ::RPC_AppendEntries_Response* unsafe_arena_release_appendentriesresp();

  private:
  const ::RPC_AppendEntries_Response& _internal_appendentriesresp() const;
  ::RPC_AppendEntries_Response* _internal_mutable_appendentriesresp();

  public:
  // .RPC.RequestVote.Request requestVoteReq = 3;
  bool has_requestvotereq() const;
  private:
  bool _internal_has_requestvotereq() const;

  public:
  void clear_requestvotereq() ;
  const ::RPC_RequestVote_Request& requestvotereq() const;
  PROTOBUF_NODISCARD ::RPC_RequestVote_Request* release_requestvotereq();
  ::RPC_RequestVote_Request* mutable_requestvotereq();
  void set_allocated_requestvotereq(::RPC_RequestVote_Request* value);
  void unsafe_arena_set_allocated_requestvotereq(::RPC_RequestVote_Request* value);
  ::RPC_RequestVote_Request* unsafe_arena_release_requestvotereq();

  private:
  const ::RPC_RequestVote_Request& _internal_requestvotereq() const;
  ::RPC_RequestVote_Request* _internal_mutable_requestvotereq();

  public:
  // .RPC.RequestVote.Response requestVoteResp = 4;
  bool has_requestvoteresp() const;
  private:
  bool _internal_has_requestvoteresp() const;

  public:
  void clear_requestvoteresp() ;
  const ::RPC_RequestVote_Response& requestvoteresp() const;
  PROTOBUF_NODISCARD ::RPC_RequestVote_Response* release_requestvoteresp();
  ::RPC_RequestVote_Response* mutable_requestvoteresp();
  void set_allocated_requestvoteresp(::RPC_RequestVote_Response* value);
  void unsafe_arena_set_allocated_requestvoteresp(::RPC_RequestVote_Response* value);
  ::RPC_RequestVote_Response* unsafe_arena_release_requestvoteresp();

  private:
  const ::RPC_RequestVote_Response& _internal_requestvoteresp() const;
  ::RPC_RequestVote_Response* _internal_mutable_requestvoteresp();

  public:
  // .RPC.StateMachineCmd.Request stateMachineCmdReq = 5;
  bool has_statemachinecmdreq() const;
  private:
  bool _internal_has_statemachinecmdreq() const;

  public:
  void clear_statemachinecmdreq() ;
  const ::RPC_StateMachineCmd_Request& statemachinecmdreq() const;
  PROTOBUF_NODISCARD ::RPC_StateMachineCmd_Request* release_statemachinecmdreq();
  ::RPC_StateMachineCmd_Request* mutable_statemachinecmdreq();
  void set_allocated_statemachinecmdreq(::RPC_StateMachineCmd_Request* value);
  void unsafe_arena_set_allocated_statemachinecmdreq(::RPC_StateMachineCmd_Request* value);
  ::RPC_StateMachineCmd_Request* unsafe_arena_release_statemachinecmdreq();

  private:
  const ::RPC_StateMachineCmd_Request& _internal_statemachinecmdreq() const;
  ::RPC_StateMachineCmd_Request* _internal_mutable_statemachinecmdreq();

  public:
  // .RPC.StateMachineCmd.Response stateMachineCmdResp = 6;
  bool has_statemachinecmdresp() const;
  private:
  bool _internal_has_statemachinecmdresp() const;

  public:
  void clear_statemachinecmdresp() ;
  const ::RPC_StateMachineCmd_Response& statemachinecmdresp() const;
  PROTOBUF_NODISCARD ::RPC_StateMachineCmd_Response* release_statemachinecmdresp();
  ::RPC_StateMachineCmd_Response* mutable_statemachinecmdresp();
  void set_allocated_statemachinecmdresp(::RPC_StateMachineCmd_Response* value);
  void unsafe_arena_set_allocated_statemachinecmdresp(::RPC_StateMachineCmd_Response* value);
  ::RPC_StateMachineCmd_Response* unsafe_arena_release_statemachinecmdresp();

  private:
  const ::RPC_StateMachineCmd_Response& _internal_statemachinecmdresp() const;
  ::RPC_StateMachineCmd_Response* _internal_mutable_statemachinecmdresp();

  public:
  void clear_msg();
  MsgCase msg_case() const;
  // @@protoc_insertion_point(class_scope:RPC)
 private:
  class _Internal;
  void set_has_appendentriesreq();
  void set_has_appendentriesresp();
  void set_has_requestvotereq();
  void set_has_requestvoteresp();
  void set_has_statemachinecmdreq();
  void set_has_statemachinecmdresp();
  inline bool has_msg() const;
  inline void clear_has_msg();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 6, 6,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    union MsgUnion {
      constexpr MsgUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::RPC_AppendEntries_Request* appendentriesreq_;
      ::RPC_AppendEntries_Response* appendentriesresp_;
      ::RPC_RequestVote_Request* requestvotereq_;
      ::RPC_RequestVote_Response* requestvoteresp_;
      ::RPC_StateMachineCmd_Request* statemachinecmdreq_;
      ::RPC_StateMachineCmd_Response* statemachinecmdresp_;
    } msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_RaftRPC_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// RPC_AppendEntries_Request_Entry

// bytes cmd = 1;
inline void RPC_AppendEntries_Request_Entry::clear_cmd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cmd_.ClearToEmpty();
}
inline const std::string& RPC_AppendEntries_Request_Entry::cmd() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RPC.AppendEntries.Request.Entry.cmd)
  return _internal_cmd();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RPC_AppendEntries_Request_Entry::set_cmd(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cmd_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:RPC.AppendEntries.Request.Entry.cmd)
}
inline std::string* RPC_AppendEntries_Request_Entry::mutable_cmd() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_cmd();
  // @@protoc_insertion_point(field_mutable:RPC.AppendEntries.Request.Entry.cmd)
  return _s;
}
inline const std::string& RPC_AppendEntries_Request_Entry::_internal_cmd() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cmd_.Get();
}
inline void RPC_AppendEntries_Request_Entry::_internal_set_cmd(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cmd_.Set(value, GetArena());
}
inline std::string* RPC_AppendEntries_Request_Entry::_internal_mutable_cmd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.cmd_.Mutable( GetArena());
}
inline std::string* RPC_AppendEntries_Request_Entry::release_cmd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:RPC.AppendEntries.Request.Entry.cmd)
  return _impl_.cmd_.Release();
}
inline void RPC_AppendEntries_Request_Entry::set_allocated_cmd(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cmd_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.cmd_.IsDefault()) {
          _impl_.cmd_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:RPC.AppendEntries.Request.Entry.cmd)
}

// -------------------------------------------------------------------

// RPC_AppendEntries_Request

// uint64 term = 1;
inline void RPC_AppendEntries_Request::clear_term() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = ::uint64_t{0u};
}
inline ::uint64_t RPC_AppendEntries_Request::term() const {
  // @@protoc_insertion_point(field_get:RPC.AppendEntries.Request.term)
  return _internal_term();
}
inline void RPC_AppendEntries_Request::set_term(::uint64_t value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:RPC.AppendEntries.Request.term)
}
inline ::uint64_t RPC_AppendEntries_Request::_internal_term() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.term_;
}
inline void RPC_AppendEntries_Request::_internal_set_term(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = value;
}

// uint64 leaderId = 2;
inline void RPC_AppendEntries_Request::clear_leaderid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.leaderid_ = ::uint64_t{0u};
}
inline ::uint64_t RPC_AppendEntries_Request::leaderid() const {
  // @@protoc_insertion_point(field_get:RPC.AppendEntries.Request.leaderId)
  return _internal_leaderid();
}
inline void RPC_AppendEntries_Request::set_leaderid(::uint64_t value) {
  _internal_set_leaderid(value);
  // @@protoc_insertion_point(field_set:RPC.AppendEntries.Request.leaderId)
}
inline ::uint64_t RPC_AppendEntries_Request::_internal_leaderid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.leaderid_;
}
inline void RPC_AppendEntries_Request::_internal_set_leaderid(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.leaderid_ = value;
}

// uint64 prevLogIndex = 3;
inline void RPC_AppendEntries_Request::clear_prevlogindex() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.prevlogindex_ = ::uint64_t{0u};
}
inline ::uint64_t RPC_AppendEntries_Request::prevlogindex() const {
  // @@protoc_insertion_point(field_get:RPC.AppendEntries.Request.prevLogIndex)
  return _internal_prevlogindex();
}
inline void RPC_AppendEntries_Request::set_prevlogindex(::uint64_t value) {
  _internal_set_prevlogindex(value);
  // @@protoc_insertion_point(field_set:RPC.AppendEntries.Request.prevLogIndex)
}
inline ::uint64_t RPC_AppendEntries_Request::_internal_prevlogindex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.prevlogindex_;
}
inline void RPC_AppendEntries_Request::_internal_set_prevlogindex(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.prevlogindex_ = value;
}

// uint64 prevLogTerm = 4;
inline void RPC_AppendEntries_Request::clear_prevlogterm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.prevlogterm_ = ::uint64_t{0u};
}
inline ::uint64_t RPC_AppendEntries_Request::prevlogterm() const {
  // @@protoc_insertion_point(field_get:RPC.AppendEntries.Request.prevLogTerm)
  return _internal_prevlogterm();
}
inline void RPC_AppendEntries_Request::set_prevlogterm(::uint64_t value) {
  _internal_set_prevlogterm(value);
  // @@protoc_insertion_point(field_set:RPC.AppendEntries.Request.prevLogTerm)
}
inline ::uint64_t RPC_AppendEntries_Request::_internal_prevlogterm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.prevlogterm_;
}
inline void RPC_AppendEntries_Request::_internal_set_prevlogterm(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.prevlogterm_ = value;
}

// repeated .RPC.AppendEntries.Request.Entry entries = 5;
inline int RPC_AppendEntries_Request::_internal_entries_size() const {
  return _internal_entries().size();
}
inline int RPC_AppendEntries_Request::entries_size() const {
  return _internal_entries_size();
}
inline void RPC_AppendEntries_Request::clear_entries() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.entries_.Clear();
}
inline ::RPC_AppendEntries_Request_Entry* RPC_AppendEntries_Request::mutable_entries(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:RPC.AppendEntries.Request.entries)
  return _internal_mutable_entries()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::RPC_AppendEntries_Request_Entry>* RPC_AppendEntries_Request::mutable_entries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:RPC.AppendEntries.Request.entries)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_entries();
}
inline const ::RPC_AppendEntries_Request_Entry& RPC_AppendEntries_Request::entries(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RPC.AppendEntries.Request.entries)
  return _internal_entries().Get(index);
}
inline ::RPC_AppendEntries_Request_Entry* RPC_AppendEntries_Request::add_entries() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::RPC_AppendEntries_Request_Entry* _add = _internal_mutable_entries()->Add();
  // @@protoc_insertion_point(field_add:RPC.AppendEntries.Request.entries)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::RPC_AppendEntries_Request_Entry>& RPC_AppendEntries_Request::entries() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:RPC.AppendEntries.Request.entries)
  return _internal_entries();
}
inline const ::google::protobuf::RepeatedPtrField<::RPC_AppendEntries_Request_Entry>&
RPC_AppendEntries_Request::_internal_entries() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.entries_;
}
inline ::google::protobuf::RepeatedPtrField<::RPC_AppendEntries_Request_Entry>*
RPC_AppendEntries_Request::_internal_mutable_entries() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.entries_;
}

// uint64 leaderCommit = 6;
inline void RPC_AppendEntries_Request::clear_leadercommit() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.leadercommit_ = ::uint64_t{0u};
}
inline ::uint64_t RPC_AppendEntries_Request::leadercommit() const {
  // @@protoc_insertion_point(field_get:RPC.AppendEntries.Request.leaderCommit)
  return _internal_leadercommit();
}
inline void RPC_AppendEntries_Request::set_leadercommit(::uint64_t value) {
  _internal_set_leadercommit(value);
  // @@protoc_insertion_point(field_set:RPC.AppendEntries.Request.leaderCommit)
}
inline ::uint64_t RPC_AppendEntries_Request::_internal_leadercommit() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.leadercommit_;
}
inline void RPC_AppendEntries_Request::_internal_set_leadercommit(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.leadercommit_ = value;
}

// uint64 requestID = 7;
inline void RPC_AppendEntries_Request::clear_requestid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.requestid_ = ::uint64_t{0u};
}
inline ::uint64_t RPC_AppendEntries_Request::requestid() const {
  // @@protoc_insertion_point(field_get:RPC.AppendEntries.Request.requestID)
  return _internal_requestid();
}
inline void RPC_AppendEntries_Request::set_requestid(::uint64_t value) {
  _internal_set_requestid(value);
  // @@protoc_insertion_point(field_set:RPC.AppendEntries.Request.requestID)
}
inline ::uint64_t RPC_AppendEntries_Request::_internal_requestid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.requestid_;
}
inline void RPC_AppendEntries_Request::_internal_set_requestid(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.requestid_ = value;
}

// -------------------------------------------------------------------

// RPC_AppendEntries_Response

// uint64 term = 1;
inline void RPC_AppendEntries_Response::clear_term() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = ::uint64_t{0u};
}
inline ::uint64_t RPC_AppendEntries_Response::term() const {
  // @@protoc_insertion_point(field_get:RPC.AppendEntries.Response.term)
  return _internal_term();
}
inline void RPC_AppendEntries_Response::set_term(::uint64_t value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:RPC.AppendEntries.Response.term)
}
inline ::uint64_t RPC_AppendEntries_Response::_internal_term() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.term_;
}
inline void RPC_AppendEntries_Response::_internal_set_term(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = value;
}

// bool success = 2;
inline void RPC_AppendEntries_Response::clear_success() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.success_ = false;
}
inline bool RPC_AppendEntries_Response::success() const {
  // @@protoc_insertion_point(field_get:RPC.AppendEntries.Response.success)
  return _internal_success();
}
inline void RPC_AppendEntries_Response::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:RPC.AppendEntries.Response.success)
}
inline bool RPC_AppendEntries_Response::_internal_success() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.success_;
}
inline void RPC_AppendEntries_Response::_internal_set_success(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.success_ = value;
}

// uint64 requestID = 3;
inline void RPC_AppendEntries_Response::clear_requestid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.requestid_ = ::uint64_t{0u};
}
inline ::uint64_t RPC_AppendEntries_Response::requestid() const {
  // @@protoc_insertion_point(field_get:RPC.AppendEntries.Response.requestID)
  return _internal_requestid();
}
inline void RPC_AppendEntries_Response::set_requestid(::uint64_t value) {
  _internal_set_requestid(value);
  // @@protoc_insertion_point(field_set:RPC.AppendEntries.Response.requestID)
}
inline ::uint64_t RPC_AppendEntries_Response::_internal_requestid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.requestid_;
}
inline void RPC_AppendEntries_Response::_internal_set_requestid(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.requestid_ = value;
}

// -------------------------------------------------------------------

// RPC_AppendEntries

// -------------------------------------------------------------------

// RPC_RequestVote_Request

// uint64 term = 1;
inline void RPC_RequestVote_Request::clear_term() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = ::uint64_t{0u};
}
inline ::uint64_t RPC_RequestVote_Request::term() const {
  // @@protoc_insertion_point(field_get:RPC.RequestVote.Request.term)
  return _internal_term();
}
inline void RPC_RequestVote_Request::set_term(::uint64_t value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:RPC.RequestVote.Request.term)
}
inline ::uint64_t RPC_RequestVote_Request::_internal_term() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.term_;
}
inline void RPC_RequestVote_Request::_internal_set_term(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = value;
}

// uint64 candidateId = 2;
inline void RPC_RequestVote_Request::clear_candidateid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.candidateid_ = ::uint64_t{0u};
}
inline ::uint64_t RPC_RequestVote_Request::candidateid() const {
  // @@protoc_insertion_point(field_get:RPC.RequestVote.Request.candidateId)
  return _internal_candidateid();
}
inline void RPC_RequestVote_Request::set_candidateid(::uint64_t value) {
  _internal_set_candidateid(value);
  // @@protoc_insertion_point(field_set:RPC.RequestVote.Request.candidateId)
}
inline ::uint64_t RPC_RequestVote_Request::_internal_candidateid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.candidateid_;
}
inline void RPC_RequestVote_Request::_internal_set_candidateid(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.candidateid_ = value;
}

// uint64 lastLogIndex = 3;
inline void RPC_RequestVote_Request::clear_lastlogindex() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lastlogindex_ = ::uint64_t{0u};
}
inline ::uint64_t RPC_RequestVote_Request::lastlogindex() const {
  // @@protoc_insertion_point(field_get:RPC.RequestVote.Request.lastLogIndex)
  return _internal_lastlogindex();
}
inline void RPC_RequestVote_Request::set_lastlogindex(::uint64_t value) {
  _internal_set_lastlogindex(value);
  // @@protoc_insertion_point(field_set:RPC.RequestVote.Request.lastLogIndex)
}
inline ::uint64_t RPC_RequestVote_Request::_internal_lastlogindex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lastlogindex_;
}
inline void RPC_RequestVote_Request::_internal_set_lastlogindex(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lastlogindex_ = value;
}

// uint64 lastLogTerm = 4;
inline void RPC_RequestVote_Request::clear_lastlogterm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lastlogterm_ = ::uint64_t{0u};
}
inline ::uint64_t RPC_RequestVote_Request::lastlogterm() const {
  // @@protoc_insertion_point(field_get:RPC.RequestVote.Request.lastLogTerm)
  return _internal_lastlogterm();
}
inline void RPC_RequestVote_Request::set_lastlogterm(::uint64_t value) {
  _internal_set_lastlogterm(value);
  // @@protoc_insertion_point(field_set:RPC.RequestVote.Request.lastLogTerm)
}
inline ::uint64_t RPC_RequestVote_Request::_internal_lastlogterm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lastlogterm_;
}
inline void RPC_RequestVote_Request::_internal_set_lastlogterm(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lastlogterm_ = value;
}

// -------------------------------------------------------------------

// RPC_RequestVote_Response

// uint64 term = 1;
inline void RPC_RequestVote_Response::clear_term() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = ::uint64_t{0u};
}
inline ::uint64_t RPC_RequestVote_Response::term() const {
  // @@protoc_insertion_point(field_get:RPC.RequestVote.Response.term)
  return _internal_term();
}
inline void RPC_RequestVote_Response::set_term(::uint64_t value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:RPC.RequestVote.Response.term)
}
inline ::uint64_t RPC_RequestVote_Response::_internal_term() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.term_;
}
inline void RPC_RequestVote_Response::_internal_set_term(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = value;
}

// bool voteGranted = 2;
inline void RPC_RequestVote_Response::clear_votegranted() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.votegranted_ = false;
}
inline bool RPC_RequestVote_Response::votegranted() const {
  // @@protoc_insertion_point(field_get:RPC.RequestVote.Response.voteGranted)
  return _internal_votegranted();
}
inline void RPC_RequestVote_Response::set_votegranted(bool value) {
  _internal_set_votegranted(value);
  // @@protoc_insertion_point(field_set:RPC.RequestVote.Response.voteGranted)
}
inline bool RPC_RequestVote_Response::_internal_votegranted() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.votegranted_;
}
inline void RPC_RequestVote_Response::_internal_set_votegranted(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.votegranted_ = value;
}

// -------------------------------------------------------------------

// RPC_RequestVote

// -------------------------------------------------------------------

// RPC_StateMachineCmd_Request

// bytes cmd = 1;
inline void RPC_StateMachineCmd_Request::clear_cmd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cmd_.ClearToEmpty();
}
inline const std::string& RPC_StateMachineCmd_Request::cmd() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RPC.StateMachineCmd.Request.cmd)
  return _internal_cmd();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RPC_StateMachineCmd_Request::set_cmd(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cmd_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:RPC.StateMachineCmd.Request.cmd)
}
inline std::string* RPC_StateMachineCmd_Request::mutable_cmd() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_cmd();
  // @@protoc_insertion_point(field_mutable:RPC.StateMachineCmd.Request.cmd)
  return _s;
}
inline const std::string& RPC_StateMachineCmd_Request::_internal_cmd() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cmd_.Get();
}
inline void RPC_StateMachineCmd_Request::_internal_set_cmd(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cmd_.Set(value, GetArena());
}
inline std::string* RPC_StateMachineCmd_Request::_internal_mutable_cmd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.cmd_.Mutable( GetArena());
}
inline std::string* RPC_StateMachineCmd_Request::release_cmd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:RPC.StateMachineCmd.Request.cmd)
  return _impl_.cmd_.Release();
}
inline void RPC_StateMachineCmd_Request::set_allocated_cmd(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cmd_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.cmd_.IsDefault()) {
          _impl_.cmd_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:RPC.StateMachineCmd.Request.cmd)
}

// -------------------------------------------------------------------

// RPC_StateMachineCmd_Response

// bool success = 1;
inline void RPC_StateMachineCmd_Response::clear_success() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.success_ = false;
}
inline bool RPC_StateMachineCmd_Response::success() const {
  // @@protoc_insertion_point(field_get:RPC.StateMachineCmd.Response.success)
  return _internal_success();
}
inline void RPC_StateMachineCmd_Response::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:RPC.StateMachineCmd.Response.success)
}
inline bool RPC_StateMachineCmd_Response::_internal_success() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.success_;
}
inline void RPC_StateMachineCmd_Response::_internal_set_success(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.success_ = value;
}

// uint64 leaderId = 2;
inline void RPC_StateMachineCmd_Response::clear_leaderid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.leaderid_ = ::uint64_t{0u};
}
inline ::uint64_t RPC_StateMachineCmd_Response::leaderid() const {
  // @@protoc_insertion_point(field_get:RPC.StateMachineCmd.Response.leaderId)
  return _internal_leaderid();
}
inline void RPC_StateMachineCmd_Response::set_leaderid(::uint64_t value) {
  _internal_set_leaderid(value);
  // @@protoc_insertion_point(field_set:RPC.StateMachineCmd.Response.leaderId)
}
inline ::uint64_t RPC_StateMachineCmd_Response::_internal_leaderid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.leaderid_;
}
inline void RPC_StateMachineCmd_Response::_internal_set_leaderid(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.leaderid_ = value;
}

// bytes msg = 3;
inline void RPC_StateMachineCmd_Response::clear_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& RPC_StateMachineCmd_Response::msg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RPC.StateMachineCmd.Response.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RPC_StateMachineCmd_Response::set_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:RPC.StateMachineCmd.Response.msg)
}
inline std::string* RPC_StateMachineCmd_Response::mutable_msg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:RPC.StateMachineCmd.Response.msg)
  return _s;
}
inline const std::string& RPC_StateMachineCmd_Response::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_.Get();
}
inline void RPC_StateMachineCmd_Response::_internal_set_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.Set(value, GetArena());
}
inline std::string* RPC_StateMachineCmd_Response::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.msg_.Mutable( GetArena());
}
inline std::string* RPC_StateMachineCmd_Response::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:RPC.StateMachineCmd.Response.msg)
  return _impl_.msg_.Release();
}
inline void RPC_StateMachineCmd_Response::set_allocated_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msg_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:RPC.StateMachineCmd.Response.msg)
}

// -------------------------------------------------------------------

// RPC_StateMachineCmd

// -------------------------------------------------------------------

// RPC

// .RPC.AppendEntries.Request appendEntriesReq = 1;
inline bool RPC::has_appendentriesreq() const {
  return msg_case() == kAppendEntriesReq;
}
inline bool RPC::_internal_has_appendentriesreq() const {
  return msg_case() == kAppendEntriesReq;
}
inline void RPC::set_has_appendentriesreq() {
  _impl_._oneof_case_[0] = kAppendEntriesReq;
}
inline void RPC::clear_appendentriesreq() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (msg_case() == kAppendEntriesReq) {
    if (GetArena() == nullptr) {
      delete _impl_.msg_.appendentriesreq_;
    }
    clear_has_msg();
  }
}
inline ::RPC_AppendEntries_Request* RPC::release_appendentriesreq() {
  // @@protoc_insertion_point(field_release:RPC.appendEntriesReq)
  if (msg_case() == kAppendEntriesReq) {
    clear_has_msg();
    auto* temp = _impl_.msg_.appendentriesreq_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.msg_.appendentriesreq_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::RPC_AppendEntries_Request& RPC::_internal_appendentriesreq() const {
  return msg_case() == kAppendEntriesReq ? *_impl_.msg_.appendentriesreq_ : reinterpret_cast<::RPC_AppendEntries_Request&>(::_RPC_AppendEntries_Request_default_instance_);
}
inline const ::RPC_AppendEntries_Request& RPC::appendentriesreq() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RPC.appendEntriesReq)
  return _internal_appendentriesreq();
}
inline ::RPC_AppendEntries_Request* RPC::unsafe_arena_release_appendentriesreq() {
  // @@protoc_insertion_point(field_unsafe_arena_release:RPC.appendEntriesReq)
  if (msg_case() == kAppendEntriesReq) {
    clear_has_msg();
    auto* temp = _impl_.msg_.appendentriesreq_;
    _impl_.msg_.appendentriesreq_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RPC::unsafe_arena_set_allocated_appendentriesreq(::RPC_AppendEntries_Request* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_msg();
  if (value) {
    set_has_appendentriesreq();
    _impl_.msg_.appendentriesreq_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:RPC.appendEntriesReq)
}
inline ::RPC_AppendEntries_Request* RPC::_internal_mutable_appendentriesreq() {
  if (msg_case() != kAppendEntriesReq) {
    clear_msg();
    set_has_appendentriesreq();
    _impl_.msg_.appendentriesreq_ =
        ::google::protobuf::Message::DefaultConstruct<::RPC_AppendEntries_Request>(GetArena());
  }
  return _impl_.msg_.appendentriesreq_;
}
inline ::RPC_AppendEntries_Request* RPC::mutable_appendentriesreq() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::RPC_AppendEntries_Request* _msg = _internal_mutable_appendentriesreq();
  // @@protoc_insertion_point(field_mutable:RPC.appendEntriesReq)
  return _msg;
}

// .RPC.AppendEntries.Response appendEntriesResp = 2;
inline bool RPC::has_appendentriesresp() const {
  return msg_case() == kAppendEntriesResp;
}
inline bool RPC::_internal_has_appendentriesresp() const {
  return msg_case() == kAppendEntriesResp;
}
inline void RPC::set_has_appendentriesresp() {
  _impl_._oneof_case_[0] = kAppendEntriesResp;
}
inline void RPC::clear_appendentriesresp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (msg_case() == kAppendEntriesResp) {
    if (GetArena() == nullptr) {
      delete _impl_.msg_.appendentriesresp_;
    }
    clear_has_msg();
  }
}
inline ::RPC_AppendEntries_Response* RPC::release_appendentriesresp() {
  // @@protoc_insertion_point(field_release:RPC.appendEntriesResp)
  if (msg_case() == kAppendEntriesResp) {
    clear_has_msg();
    auto* temp = _impl_.msg_.appendentriesresp_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.msg_.appendentriesresp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::RPC_AppendEntries_Response& RPC::_internal_appendentriesresp() const {
  return msg_case() == kAppendEntriesResp ? *_impl_.msg_.appendentriesresp_ : reinterpret_cast<::RPC_AppendEntries_Response&>(::_RPC_AppendEntries_Response_default_instance_);
}
inline const ::RPC_AppendEntries_Response& RPC::appendentriesresp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RPC.appendEntriesResp)
  return _internal_appendentriesresp();
}
inline ::RPC_AppendEntries_Response* RPC::unsafe_arena_release_appendentriesresp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:RPC.appendEntriesResp)
  if (msg_case() == kAppendEntriesResp) {
    clear_has_msg();
    auto* temp = _impl_.msg_.appendentriesresp_;
    _impl_.msg_.appendentriesresp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RPC::unsafe_arena_set_allocated_appendentriesresp(::RPC_AppendEntries_Response* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_msg();
  if (value) {
    set_has_appendentriesresp();
    _impl_.msg_.appendentriesresp_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:RPC.appendEntriesResp)
}
inline ::RPC_AppendEntries_Response* RPC::_internal_mutable_appendentriesresp() {
  if (msg_case() != kAppendEntriesResp) {
    clear_msg();
    set_has_appendentriesresp();
    _impl_.msg_.appendentriesresp_ =
        ::google::protobuf::Message::DefaultConstruct<::RPC_AppendEntries_Response>(GetArena());
  }
  return _impl_.msg_.appendentriesresp_;
}
inline ::RPC_AppendEntries_Response* RPC::mutable_appendentriesresp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::RPC_AppendEntries_Response* _msg = _internal_mutable_appendentriesresp();
  // @@protoc_insertion_point(field_mutable:RPC.appendEntriesResp)
  return _msg;
}

// .RPC.RequestVote.Request requestVoteReq = 3;
inline bool RPC::has_requestvotereq() const {
  return msg_case() == kRequestVoteReq;
}
inline bool RPC::_internal_has_requestvotereq() const {
  return msg_case() == kRequestVoteReq;
}
inline void RPC::set_has_requestvotereq() {
  _impl_._oneof_case_[0] = kRequestVoteReq;
}
inline void RPC::clear_requestvotereq() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (msg_case() == kRequestVoteReq) {
    if (GetArena() == nullptr) {
      delete _impl_.msg_.requestvotereq_;
    }
    clear_has_msg();
  }
}
inline ::RPC_RequestVote_Request* RPC::release_requestvotereq() {
  // @@protoc_insertion_point(field_release:RPC.requestVoteReq)
  if (msg_case() == kRequestVoteReq) {
    clear_has_msg();
    auto* temp = _impl_.msg_.requestvotereq_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.msg_.requestvotereq_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::RPC_RequestVote_Request& RPC::_internal_requestvotereq() const {
  return msg_case() == kRequestVoteReq ? *_impl_.msg_.requestvotereq_ : reinterpret_cast<::RPC_RequestVote_Request&>(::_RPC_RequestVote_Request_default_instance_);
}
inline const ::RPC_RequestVote_Request& RPC::requestvotereq() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RPC.requestVoteReq)
  return _internal_requestvotereq();
}
inline ::RPC_RequestVote_Request* RPC::unsafe_arena_release_requestvotereq() {
  // @@protoc_insertion_point(field_unsafe_arena_release:RPC.requestVoteReq)
  if (msg_case() == kRequestVoteReq) {
    clear_has_msg();
    auto* temp = _impl_.msg_.requestvotereq_;
    _impl_.msg_.requestvotereq_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RPC::unsafe_arena_set_allocated_requestvotereq(::RPC_RequestVote_Request* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_msg();
  if (value) {
    set_has_requestvotereq();
    _impl_.msg_.requestvotereq_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:RPC.requestVoteReq)
}
inline ::RPC_RequestVote_Request* RPC::_internal_mutable_requestvotereq() {
  if (msg_case() != kRequestVoteReq) {
    clear_msg();
    set_has_requestvotereq();
    _impl_.msg_.requestvotereq_ =
        ::google::protobuf::Message::DefaultConstruct<::RPC_RequestVote_Request>(GetArena());
  }
  return _impl_.msg_.requestvotereq_;
}
inline ::RPC_RequestVote_Request* RPC::mutable_requestvotereq() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::RPC_RequestVote_Request* _msg = _internal_mutable_requestvotereq();
  // @@protoc_insertion_point(field_mutable:RPC.requestVoteReq)
  return _msg;
}

// .RPC.RequestVote.Response requestVoteResp = 4;
inline bool RPC::has_requestvoteresp() const {
  return msg_case() == kRequestVoteResp;
}
inline bool RPC::_internal_has_requestvoteresp() const {
  return msg_case() == kRequestVoteResp;
}
inline void RPC::set_has_requestvoteresp() {
  _impl_._oneof_case_[0] = kRequestVoteResp;
}
inline void RPC::clear_requestvoteresp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (msg_case() == kRequestVoteResp) {
    if (GetArena() == nullptr) {
      delete _impl_.msg_.requestvoteresp_;
    }
    clear_has_msg();
  }
}
inline ::RPC_RequestVote_Response* RPC::release_requestvoteresp() {
  // @@protoc_insertion_point(field_release:RPC.requestVoteResp)
  if (msg_case() == kRequestVoteResp) {
    clear_has_msg();
    auto* temp = _impl_.msg_.requestvoteresp_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.msg_.requestvoteresp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::RPC_RequestVote_Response& RPC::_internal_requestvoteresp() const {
  return msg_case() == kRequestVoteResp ? *_impl_.msg_.requestvoteresp_ : reinterpret_cast<::RPC_RequestVote_Response&>(::_RPC_RequestVote_Response_default_instance_);
}
inline const ::RPC_RequestVote_Response& RPC::requestvoteresp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RPC.requestVoteResp)
  return _internal_requestvoteresp();
}
inline ::RPC_RequestVote_Response* RPC::unsafe_arena_release_requestvoteresp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:RPC.requestVoteResp)
  if (msg_case() == kRequestVoteResp) {
    clear_has_msg();
    auto* temp = _impl_.msg_.requestvoteresp_;
    _impl_.msg_.requestvoteresp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RPC::unsafe_arena_set_allocated_requestvoteresp(::RPC_RequestVote_Response* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_msg();
  if (value) {
    set_has_requestvoteresp();
    _impl_.msg_.requestvoteresp_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:RPC.requestVoteResp)
}
inline ::RPC_RequestVote_Response* RPC::_internal_mutable_requestvoteresp() {
  if (msg_case() != kRequestVoteResp) {
    clear_msg();
    set_has_requestvoteresp();
    _impl_.msg_.requestvoteresp_ =
        ::google::protobuf::Message::DefaultConstruct<::RPC_RequestVote_Response>(GetArena());
  }
  return _impl_.msg_.requestvoteresp_;
}
inline ::RPC_RequestVote_Response* RPC::mutable_requestvoteresp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::RPC_RequestVote_Response* _msg = _internal_mutable_requestvoteresp();
  // @@protoc_insertion_point(field_mutable:RPC.requestVoteResp)
  return _msg;
}

// .RPC.StateMachineCmd.Request stateMachineCmdReq = 5;
inline bool RPC::has_statemachinecmdreq() const {
  return msg_case() == kStateMachineCmdReq;
}
inline bool RPC::_internal_has_statemachinecmdreq() const {
  return msg_case() == kStateMachineCmdReq;
}
inline void RPC::set_has_statemachinecmdreq() {
  _impl_._oneof_case_[0] = kStateMachineCmdReq;
}
inline void RPC::clear_statemachinecmdreq() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (msg_case() == kStateMachineCmdReq) {
    if (GetArena() == nullptr) {
      delete _impl_.msg_.statemachinecmdreq_;
    }
    clear_has_msg();
  }
}
inline ::RPC_StateMachineCmd_Request* RPC::release_statemachinecmdreq() {
  // @@protoc_insertion_point(field_release:RPC.stateMachineCmdReq)
  if (msg_case() == kStateMachineCmdReq) {
    clear_has_msg();
    auto* temp = _impl_.msg_.statemachinecmdreq_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.msg_.statemachinecmdreq_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::RPC_StateMachineCmd_Request& RPC::_internal_statemachinecmdreq() const {
  return msg_case() == kStateMachineCmdReq ? *_impl_.msg_.statemachinecmdreq_ : reinterpret_cast<::RPC_StateMachineCmd_Request&>(::_RPC_StateMachineCmd_Request_default_instance_);
}
inline const ::RPC_StateMachineCmd_Request& RPC::statemachinecmdreq() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RPC.stateMachineCmdReq)
  return _internal_statemachinecmdreq();
}
inline ::RPC_StateMachineCmd_Request* RPC::unsafe_arena_release_statemachinecmdreq() {
  // @@protoc_insertion_point(field_unsafe_arena_release:RPC.stateMachineCmdReq)
  if (msg_case() == kStateMachineCmdReq) {
    clear_has_msg();
    auto* temp = _impl_.msg_.statemachinecmdreq_;
    _impl_.msg_.statemachinecmdreq_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RPC::unsafe_arena_set_allocated_statemachinecmdreq(::RPC_StateMachineCmd_Request* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_msg();
  if (value) {
    set_has_statemachinecmdreq();
    _impl_.msg_.statemachinecmdreq_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:RPC.stateMachineCmdReq)
}
inline ::RPC_StateMachineCmd_Request* RPC::_internal_mutable_statemachinecmdreq() {
  if (msg_case() != kStateMachineCmdReq) {
    clear_msg();
    set_has_statemachinecmdreq();
    _impl_.msg_.statemachinecmdreq_ =
        ::google::protobuf::Message::DefaultConstruct<::RPC_StateMachineCmd_Request>(GetArena());
  }
  return _impl_.msg_.statemachinecmdreq_;
}
inline ::RPC_StateMachineCmd_Request* RPC::mutable_statemachinecmdreq() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::RPC_StateMachineCmd_Request* _msg = _internal_mutable_statemachinecmdreq();
  // @@protoc_insertion_point(field_mutable:RPC.stateMachineCmdReq)
  return _msg;
}

// .RPC.StateMachineCmd.Response stateMachineCmdResp = 6;
inline bool RPC::has_statemachinecmdresp() const {
  return msg_case() == kStateMachineCmdResp;
}
inline bool RPC::_internal_has_statemachinecmdresp() const {
  return msg_case() == kStateMachineCmdResp;
}
inline void RPC::set_has_statemachinecmdresp() {
  _impl_._oneof_case_[0] = kStateMachineCmdResp;
}
inline void RPC::clear_statemachinecmdresp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (msg_case() == kStateMachineCmdResp) {
    if (GetArena() == nullptr) {
      delete _impl_.msg_.statemachinecmdresp_;
    }
    clear_has_msg();
  }
}
inline ::RPC_StateMachineCmd_Response* RPC::release_statemachinecmdresp() {
  // @@protoc_insertion_point(field_release:RPC.stateMachineCmdResp)
  if (msg_case() == kStateMachineCmdResp) {
    clear_has_msg();
    auto* temp = _impl_.msg_.statemachinecmdresp_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.msg_.statemachinecmdresp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::RPC_StateMachineCmd_Response& RPC::_internal_statemachinecmdresp() const {
  return msg_case() == kStateMachineCmdResp ? *_impl_.msg_.statemachinecmdresp_ : reinterpret_cast<::RPC_StateMachineCmd_Response&>(::_RPC_StateMachineCmd_Response_default_instance_);
}
inline const ::RPC_StateMachineCmd_Response& RPC::statemachinecmdresp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RPC.stateMachineCmdResp)
  return _internal_statemachinecmdresp();
}
inline ::RPC_StateMachineCmd_Response* RPC::unsafe_arena_release_statemachinecmdresp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:RPC.stateMachineCmdResp)
  if (msg_case() == kStateMachineCmdResp) {
    clear_has_msg();
    auto* temp = _impl_.msg_.statemachinecmdresp_;
    _impl_.msg_.statemachinecmdresp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RPC::unsafe_arena_set_allocated_statemachinecmdresp(::RPC_StateMachineCmd_Response* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_msg();
  if (value) {
    set_has_statemachinecmdresp();
    _impl_.msg_.statemachinecmdresp_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:RPC.stateMachineCmdResp)
}
inline ::RPC_StateMachineCmd_Response* RPC::_internal_mutable_statemachinecmdresp() {
  if (msg_case() != kStateMachineCmdResp) {
    clear_msg();
    set_has_statemachinecmdresp();
    _impl_.msg_.statemachinecmdresp_ =
        ::google::protobuf::Message::DefaultConstruct<::RPC_StateMachineCmd_Response>(GetArena());
  }
  return _impl_.msg_.statemachinecmdresp_;
}
inline ::RPC_StateMachineCmd_Response* RPC::mutable_statemachinecmdresp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::RPC_StateMachineCmd_Response* _msg = _internal_mutable_statemachinecmdresp();
  // @@protoc_insertion_point(field_mutable:RPC.stateMachineCmdResp)
  return _msg;
}

inline bool RPC::has_msg() const {
  return msg_case() != MSG_NOT_SET;
}
inline void RPC::clear_has_msg() {
  _impl_._oneof_case_[0] = MSG_NOT_SET;
}
inline RPC::MsgCase RPC::msg_case() const {
  return RPC::MsgCase(_impl_._oneof_case_[0]);
}
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_RaftRPC_2eproto_2epb_2eh
